2019-12-12 10:08:47,876 - root - DEBUG - RSA Auth/authenticate()
2019-12-12 10:08:47,876 - root - DEBUG - RSA Auth/authenticate() --> needed to authenticate
2019-12-12 10:08:47,876 - root - DEBUG - RSA_auth/get_session_token() function started
2019-12-12 10:08:47,876 - root - DEBUG - RSA_auth/getJWT() function started
2019-12-12 10:08:48,084 - root - DEBUG - RSA/session token success
2019-12-12 10:08:48,084 - root - DEBUG - RSA_auth/get_keyauth()
2019-12-12 10:08:48,085 - root - DEBUG - RSA_auth/getJWT() function started
2019-12-12 10:08:48,233 - root - DEBUG - RSA/key manager token success
2019-12-12 10:08:48,284 - root - INFO - DataFeedEventService/startDataFeed()
2019-12-12 10:08:48,284 - root - DEBUG - DataFeedClient/create_datafeed()
2019-12-12 10:08:49,133 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:08:59,286 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "messageSent": {
        "message": {
            "messageId": "kW6NHdo7BXlCAEj84g54Wn___pEFWBbvbQ",
            "timestamp": 1576163338512,
            "message": "<div data-format=\"PresentationML\" data-version=\"2.0\" class=\"wysiwyg\"><p>hi</p></div>",
            "data": "{}",
            "user": {
                "userId": 349026222344902,
                "firstName": "Reed",
                "lastName": "Feldman",
                "displayName": "Reed Feldman (Develop 2)",
                "email": "reed.feldman@symphony.com",
                "username": "reed.feldman@symphony.com"
            },
            "stream": {
                "streamId": "4RBWbCSEzY14B9F2RE8FXH___pGaF5k4dA",
                "streamType": "ROOM"
            },
            "externalRecipients": false,
            "userAgent": "DESKTOP-40.0.0-10726-MacOSX-10.14.6-Chrome-78.0.3904.108",
            "originalFormat": "com.symphony.messageml.v2"
        }
    }
}
2019-12-12 10:08:59,286 - root - DEBUG - UserClient/get_session_user()
2019-12-12 10:08:59,416 - root - DEBUG - DataFeedEventService/handle_event()
2019-12-12 10:08:59,416 - root - DEBUG - msg_sent_handler function started
2019-12-12 10:08:59,416 - root - DEBUG - room msg received
2019-12-12 10:08:59,416 - root - DEBUG - im_processor/process_room_message()
2019-12-12 10:08:59,417 - root - DEBUG - {
    "messageId": "kW6NHdo7BXlCAEj84g54Wn___pEFWBbvbQ",
    "timestamp": 1576163338512,
    "message": "<div data-format=\"PresentationML\" data-version=\"2.0\" class=\"wysiwyg\"><p>hi</p></div>",
    "data": "{}",
    "user": {
        "userId": 349026222344902,
        "firstName": "Reed",
        "lastName": "Feldman",
        "displayName": "Reed Feldman (Develop 2)",
        "email": "reed.feldman@symphony.com",
        "username": "reed.feldman@symphony.com"
    },
    "stream": {
        "streamId": "4RBWbCSEzY14B9F2RE8FXH___pGaF5k4dA",
        "streamType": "ROOM"
    },
    "externalRecipients": false,
    "userAgent": "DESKTOP-40.0.0-10726-MacOSX-10.14.6-Chrome-78.0.3904.108",
    "originalFormat": "com.symphony.messageml.v2"
}
2019-12-12 10:08:59,417 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:08:59,884 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:09:00,300 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "messageSent": {
        "message": {
            "messageId": "BmPtuWwubgznL-3zFzyYfn___pEFWBKadA",
            "timestamp": 1576163339626,
            "message": "<div data-format=\"PresentationML\" data-version=\"2.0\">                                                 <p>Choose Your Demo:</p>                                                 <br/> <br/>                                                   <form id=\"choose-bot\">                                                     <div style=\"padding-top:1px;\"><button type=\"action\" name=\"kyc\">KYC</button>                                                     <button type=\"action\" name=\"trade-structure\">Trade Builder</button>                                                     <button type=\"action\" name=\"whitesand\">FX Trade Exception</button></div>                                                   </form>                                                 </div>",
            "user": {
                "userId": 349026222348383,
                "displayName": "hydraBot",
                "email": "hydraBot@example.com",
                "username": "hydraBot"
            },
            "stream": {
                "streamId": "4RBWbCSEzY14B9F2RE8FXH___pGaF5k4dA",
                "streamType": "ROOM"
            },
            "externalRecipients": false,
            "userAgent": "Agent-2.55.12-Linux-4.14.143-91.122.amzn1.x86_64",
            "originalFormat": "com.symphony.messageml.v2"
        }
    }
}
2019-12-12 10:09:00,300 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:09:07,698 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "symphonyElementsAction": {
        "actionStream": {
            "streamId": "bx_mCNzrEDv4HJEpui4dRX___pGfkDjVdA"
        },
        "formStream": {
            "streamId": "4RBWbCSEzY14B9F2RE8FXH///pGaF5k4dA=="
        },
        "formMessageId": "BmPtuWwubgznL+3zFzyYfn///pEFWBKadA==",
        "formId": "choose-bot",
        "formValues": {
            "action": "kyc"
        }
    }
}
2019-12-12 10:09:07,698 - root - DEBUG - DataFeedEventService/handle_event()
2019-12-12 10:09:07,698 - root - DEBUG - elements_action_handler
2019-12-12 10:09:07,699 - root - DEBUG - StreamClient/stream_info_v2()
2019-12-12 10:09:07,726 - root - DEBUG - action_processor/room_process
2019-12-12 10:09:07,726 - root - DEBUG - {
    "id": "rHJy8p",
    "messageId": "y4UCMDG6-OHm3ZZqADZYCH___pEFV_XKbQ",
    "timestamp": 1576163346997,
    "type": "SYMPHONYELEMENTSACTION",
    "initiator": {
        "user": {
            "userId": 349026222344902,
            "firstName": "Reed",
            "lastName": "Feldman",
            "displayName": "Reed Feldman (Develop 2)",
            "email": "reed.feldman@symphony.com",
            "username": "reed.feldman@symphony.com"
        }
    },
    "payload": {
        "symphonyElementsAction": {
            "actionStream": {
                "streamId": "bx_mCNzrEDv4HJEpui4dRX___pGfkDjVdA"
            },
            "formStream": {
                "streamId": "4RBWbCSEzY14B9F2RE8FXH///pGaF5k4dA=="
            },
            "formMessageId": "BmPtuWwubgznL+3zFzyYfn///pEFWBKadA==",
            "formId": "choose-bot",
            "formValues": {
                "action": "kyc"
            }
        }
    }
}
2019-12-12 10:09:07,726 - root - DEBUG - StreamClient/create_im()
2019-12-12 10:09:07,761 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:09:08,243 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:09:08,452 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "messageSent": {
        "message": {
            "messageId": "31raII9aNIWDbbxJ4vBuYn___pEFV_E6dA",
            "timestamp": 1576163348172,
            "message": "<div data-format=\"PresentationML\" data-version=\"2.0\">                                         <h3>Hi! Use hydraBot to assist with all your onboarding needs! You can try:</h3>                                             <ul>                                             <li><span class=\"entity\" data-entity-id=\"mention1\">@hydraBot</span> help onboard</li>                                             <li><span class=\"entity\" data-entity-id=\"mention2\">@hydraBot</span> get entity</li>                                             <li><span class=\"entity\" data-entity-id=\"mention3\">@hydraBot</span> get documentation</li>                                             <li><span class=\"entity\" data-entity-id=\"mention4\">@hydraBot</span> clear</li>                                             <li><span class=\"entity\" data-entity-id=\"mention5\">@hydraBot</span> finish</li>                                             </ul>                                     </div>",
            "data": "{\"mention1\":{\"type\":\"com.symphony.user.mention\",\"version\":\"1.0\",\"id\":[{\"type\":\"com.symphony.user.userId\",\"value\":\"349026222348383\"}]},\"mention2\":{\"type\":\"com.symphony.user.mention\",\"version\":\"1.0\",\"id\":[{\"type\":\"com.symphony.user.userId\",\"value\":\"349026222348383\"}]},\"mention3\":{\"type\":\"com.symphony.user.mention\",\"version\":\"1.0\",\"id\":[{\"type\":\"com.symphony.user.userId\",\"value\":\"349026222348383\"}]},\"mention4\":{\"type\":\"com.symphony.user.mention\",\"version\":\"1.0\",\"id\":[{\"type\":\"com.symphony.user.userId\",\"value\":\"349026222348383\"}]},\"mention5\":{\"type\":\"com.symphony.user.mention\",\"version\":\"1.0\",\"id\":[{\"type\":\"com.symphony.user.userId\",\"value\":\"349026222348383\"}]}}",
            "user": {
                "userId": 349026222348383,
                "displayName": "hydraBot",
                "email": "hydraBot@example.com",
                "username": "hydraBot"
            },
            "stream": {
                "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
                "streamType": "IM"
            },
            "externalRecipients": false,
            "userAgent": "Agent-2.55.12-Linux-4.14.143-91.122.amzn1.x86_64",
            "originalFormat": "com.symphony.messageml.v2"
        }
    }
}
2019-12-12 10:09:08,452 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:09:34,604 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "messageSent": {
        "message": {
            "messageId": "OfEi3g5XqDLsNjwFZc9w5X___pEFV4wcbQ",
            "timestamp": 1576163374051,
            "message": "<div data-format=\"PresentationML\" data-version=\"2.0\" class=\"wysiwyg\"><p><span class=\"entity\" data-entity-id=\"0\">@hydraBot</span> get entity </p></div>",
            "data": "{\"0\":{\"id\":[{\"type\":\"com.symphony.user.userId\",\"value\":\"349026222348383\"}],\"type\":\"com.symphony.user.mention\"}}",
            "user": {
                "userId": 349026222344902,
                "firstName": "Reed",
                "lastName": "Feldman",
                "displayName": "Reed Feldman (Develop 2)",
                "email": "reed.feldman@symphony.com",
                "username": "reed.feldman@symphony.com"
            },
            "stream": {
                "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
                "streamType": "IM"
            },
            "externalRecipients": false,
            "userAgent": "DESKTOP-40.0.0-10726-MacOSX-10.14.6-Chrome-78.0.3904.108",
            "originalFormat": "com.symphony.messageml.v2"
        }
    }
}
2019-12-12 10:09:34,604 - root - DEBUG - DataFeedEventService/handle_event()
2019-12-12 10:09:34,604 - root - DEBUG - msg_sent_handler function started
2019-12-12 10:09:34,604 - root - DEBUG - message received in IM
2019-12-12 10:09:34,604 - root - DEBUG - im_processor/process_im_message()
2019-12-12 10:09:34,604 - root - DEBUG - {
    "messageId": "OfEi3g5XqDLsNjwFZc9w5X___pEFV4wcbQ",
    "timestamp": 1576163374051,
    "message": "<div data-format=\"PresentationML\" data-version=\"2.0\" class=\"wysiwyg\"><p><span class=\"entity\" data-entity-id=\"0\">@hydraBot</span> get entity </p></div>",
    "data": "{\"0\":{\"id\":[{\"type\":\"com.symphony.user.userId\",\"value\":\"349026222348383\"}],\"type\":\"com.symphony.user.mention\"}}",
    "user": {
        "userId": 349026222344902,
        "firstName": "Reed",
        "lastName": "Feldman",
        "displayName": "Reed Feldman (Develop 2)",
        "email": "reed.feldman@symphony.com",
        "username": "reed.feldman@symphony.com"
    },
    "stream": {
        "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
        "streamType": "IM"
    },
    "externalRecipients": false,
    "userAgent": "DESKTOP-40.0.0-10726-MacOSX-10.14.6-Chrome-78.0.3904.108",
    "originalFormat": "com.symphony.messageml.v2"
}
2019-12-12 10:09:34,605 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:09:34,822 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:09:35,072 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:09:35,283 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "messageSent": {
        "message": {
            "messageId": "4TWFvB4AyUPkien2OYlkaH___pEFV4lXdA",
            "timestamp": 1576163374765,
            "message": "<div data-format=\"PresentationML\" data-version=\"2.0\">Please select a client entity name to start</div>",
            "user": {
                "userId": 349026222348383,
                "displayName": "hydraBot",
                "email": "hydraBot@example.com",
                "username": "hydraBot"
            },
            "stream": {
                "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
                "streamType": "IM"
            },
            "externalRecipients": false,
            "userAgent": "Agent-2.55.12-Linux-4.14.143-91.122.amzn1.x86_64",
            "originalFormat": "com.symphony.messageml.v2"
        }
    }
}
2019-12-12 10:09:35,283 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:09:42,138 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "symphonyElementsAction": {
        "actionStream": {
            "streamId": "bx_mCNzrEDv4HJEpui4dRX___pGfkDjVdA"
        },
        "formStream": {
            "streamId": "d4qgB1L07mpNwSzd+JBJhH///pGf9bEMdA=="
        },
        "formMessageId": "iWtXKr2naqHelzU5pmXVJn///pEFV4hcdA==",
        "formId": "form_id",
        "formValues": {
            "action": "data MK-Capitol"
        }
    }
}
2019-12-12 10:09:42,138 - root - DEBUG - DataFeedEventService/handle_event()
2019-12-12 10:09:42,138 - root - DEBUG - elements_action_handler
2019-12-12 10:09:42,139 - root - DEBUG - StreamClient/stream_info_v2()
2019-12-12 10:09:42,252 - root - DEBUG - action_processor/im_process
2019-12-12 10:09:42,252 - root - DEBUG - {
    "id": "cY74Fz",
    "messageId": "-yGfq2MgT-wPKka_5eTh0X___pEFV21GbQ",
    "timestamp": 1576163381945,
    "type": "SYMPHONYELEMENTSACTION",
    "initiator": {
        "user": {
            "userId": 349026222344902,
            "firstName": "Reed",
            "lastName": "Feldman",
            "displayName": "Reed Feldman (Develop 2)",
            "email": "reed.feldman@symphony.com",
            "username": "reed.feldman@symphony.com"
        }
    },
    "payload": {
        "symphonyElementsAction": {
            "actionStream": {
                "streamId": "bx_mCNzrEDv4HJEpui4dRX___pGfkDjVdA"
            },
            "formStream": {
                "streamId": "d4qgB1L07mpNwSzd+JBJhH///pGf9bEMdA=="
            },
            "formMessageId": "iWtXKr2naqHelzU5pmXVJn///pEFV4hcdA==",
            "formId": "form_id",
            "formValues": {
                "action": "data MK-Capitol"
            }
        }
    }
}
2019-12-12 10:09:42,252 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:09:42,483 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:09:42,747 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:09:42,918 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "messageSent": {
        "message": {
            "messageId": "hvXkAxhfP4dyO8LoW6Y6_3___pEFV2tzdA",
            "timestamp": 1576163382416,
            "message": "<div data-format=\"PresentationML\" data-version=\"2.0\">Found your client company [['data', 'MK-Capitol']].  Now provide an entify identifier like [LEI, Client Identifier, or Exact Name Match]</div>",
            "user": {
                "userId": 349026222348383,
                "displayName": "hydraBot",
                "email": "hydraBot@example.com",
                "username": "hydraBot"
            },
            "stream": {
                "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
                "streamType": "IM"
            },
            "externalRecipients": false,
            "userAgent": "Agent-2.55.12-Linux-4.14.143-91.122.amzn1.x86_64",
            "originalFormat": "com.symphony.messageml.v2"
        }
    }
}
2019-12-12 10:09:42,918 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:09:49,593 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "symphonyElementsAction": {
        "actionStream": {
            "streamId": "bx_mCNzrEDv4HJEpui4dRX___pGfkDjVdA"
        },
        "formStream": {
            "streamId": "d4qgB1L07mpNwSzd+JBJhH///pGf9bEMdA=="
        },
        "formMessageId": "kjgL2FO0JpaJryPmvTlZqH///pEFV2pudA==",
        "formId": "identifier",
        "formValues": {
            "action": "identifier-data",
            "match": [
                "OceanCliff",
                "",
                ""
            ]
        }
    }
}
2019-12-12 10:09:49,593 - root - DEBUG - DataFeedEventService/handle_event()
2019-12-12 10:09:49,593 - root - DEBUG - elements_action_handler
2019-12-12 10:09:49,593 - root - DEBUG - StreamClient/stream_info_v2()
2019-12-12 10:09:49,625 - root - DEBUG - action_processor/im_process
2019-12-12 10:09:49,625 - root - DEBUG - {
    "id": "Wp2O9V",
    "messageId": "YzuNYFerwsSJoTYi5xur33___pEFV1G5bQ",
    "timestamp": 1576163388998,
    "type": "SYMPHONYELEMENTSACTION",
    "initiator": {
        "user": {
            "userId": 349026222344902,
            "firstName": "Reed",
            "lastName": "Feldman",
            "displayName": "Reed Feldman (Develop 2)",
            "email": "reed.feldman@symphony.com",
            "username": "reed.feldman@symphony.com"
        }
    },
    "payload": {
        "symphonyElementsAction": {
            "actionStream": {
                "streamId": "bx_mCNzrEDv4HJEpui4dRX___pGfkDjVdA"
            },
            "formStream": {
                "streamId": "d4qgB1L07mpNwSzd+JBJhH///pGf9bEMdA=="
            },
            "formMessageId": "kjgL2FO0JpaJryPmvTlZqH///pEFV2pudA==",
            "formId": "identifier",
            "formValues": {
                "action": "identifier-data",
                "match": [
                    "OceanCliff",
                    "",
                    ""
                ]
            }
        }
    }
}
2019-12-12 10:09:49,627 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:09:49,855 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:09:50,061 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "messageSent": {
        "message": {
            "messageId": "8d6hLHf-oLmSfBGgF6cxu3___pEFV06ydA",
            "timestamp": 1576163389778,
            "message": "<div data-format=\"PresentationML\" data-version=\"2.0\">     <form id=\"data-table\">       <table>           <tbody>             <tr>               <td>Client Identifier</td>               <td>Viking 3342</td>             </tr>             <tr>               <td>Entity Type</td>               <td>Fund</td>             </tr>             <tr>               <td>Entity Sub-Type</td>               <td> </td>             </tr>             <tr>               <td>Sub-Legal Classification</td>               <td>Mutual Fund</td>             </tr>           </tbody>       </table>       <br/>       <p>You can continue to search by entering data in the fields below or press clear to reset.</p>       <br/>       <input type=\"text\" name=\"match\" placeholder=\"Exact Name Match\"/>       <input type=\"text\" name=\"match\" placeholder=\"LEI\"/>       <input type=\"text\" name=\"match\" placeholder=\"Client Identifier\"/>       <div style=\"padding-top:1px;padding-left:5px;\"><button type=\"action\" name=\"identifier-data\">SUBMIT</button>       <button type=\"action\" name=\"clear\">CLEAR</button></div>     </form> </div>",
            "user": {
                "userId": 349026222348383,
                "displayName": "hydraBot",
                "email": "hydraBot@example.com",
                "username": "hydraBot"
            },
            "stream": {
                "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
                "streamType": "IM"
            },
            "externalRecipients": false,
            "userAgent": "Agent-2.55.12-Linux-4.14.143-91.122.amzn1.x86_64",
            "originalFormat": "com.symphony.messageml.v2"
        }
    }
}
2019-12-12 10:09:50,061 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:09:56,486 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "symphonyElementsAction": {
        "actionStream": {
            "streamId": "bx_mCNzrEDv4HJEpui4dRX___pGfkDjVdA"
        },
        "formStream": {
            "streamId": "d4qgB1L07mpNwSzd+JBJhH///pGf9bEMdA=="
        },
        "formMessageId": "8d6hLHf+oLmSfBGgF6cxu3///pEFV06ydA==",
        "formId": "data-table",
        "formValues": {
            "action": "clear",
            "match": [
                "",
                "",
                ""
            ]
        }
    }
}
2019-12-12 10:09:56,486 - root - DEBUG - DataFeedEventService/handle_event()
2019-12-12 10:09:56,486 - root - DEBUG - elements_action_handler
2019-12-12 10:09:56,486 - root - DEBUG - StreamClient/stream_info_v2()
2019-12-12 10:09:56,518 - root - DEBUG - action_processor/im_process
2019-12-12 10:09:56,518 - root - DEBUG - {
    "id": "VQTxbG",
    "messageId": "pE84AGu__-xv1OPXixpQAn___pEFVzU1bQ",
    "timestamp": 1576163396298,
    "type": "SYMPHONYELEMENTSACTION",
    "initiator": {
        "user": {
            "userId": 349026222344902,
            "firstName": "Reed",
            "lastName": "Feldman",
            "displayName": "Reed Feldman (Develop 2)",
            "email": "reed.feldman@symphony.com",
            "username": "reed.feldman@symphony.com"
        }
    },
    "payload": {
        "symphonyElementsAction": {
            "actionStream": {
                "streamId": "bx_mCNzrEDv4HJEpui4dRX___pGfkDjVdA"
            },
            "formStream": {
                "streamId": "d4qgB1L07mpNwSzd+JBJhH///pGf9bEMdA=="
            },
            "formMessageId": "8d6hLHf+oLmSfBGgF6cxu3///pEFV06ydA==",
            "formId": "data-table",
            "formValues": {
                "action": "clear",
                "match": [
                    "",
                    "",
                    ""
                ]
            }
        }
    }
}
2019-12-12 10:09:56,518 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:09:56,732 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:09:56,947 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "messageSent": {
        "message": {
            "messageId": "BKPG6ytVQRs9JaSFXvG5b3___pEFVzPBdA",
            "timestamp": 1576163396677,
            "message": "<div data-format=\"PresentationML\" data-version=\"2.0\">                                         <p>Begin a new request</p>                                       </div>",
            "user": {
                "userId": 349026222348383,
                "displayName": "hydraBot",
                "email": "hydraBot@example.com",
                "username": "hydraBot"
            },
            "stream": {
                "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
                "streamType": "IM"
            },
            "externalRecipients": false,
            "userAgent": "Agent-2.55.12-Linux-4.14.143-91.122.amzn1.x86_64",
            "originalFormat": "com.symphony.messageml.v2"
        }
    }
}
2019-12-12 10:09:56,947 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:10:02,780 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "messageSent": {
        "message": {
            "messageId": "pgrdz7v84hKRKBAg8qO1dH___pEFVxytbQ",
            "timestamp": 1576163402578,
            "message": "<div data-format=\"PresentationML\" data-version=\"2.0\" class=\"wysiwyg\"><p><span class=\"entity\" data-entity-id=\"0\">@hydraBot</span> get documentation</p></div>",
            "data": "{\"0\":{\"id\":[{\"type\":\"com.symphony.user.userId\",\"value\":\"349026222348383\"}],\"type\":\"com.symphony.user.mention\"}}",
            "user": {
                "userId": 349026222344902,
                "firstName": "Reed",
                "lastName": "Feldman",
                "displayName": "Reed Feldman (Develop 2)",
                "email": "reed.feldman@symphony.com",
                "username": "reed.feldman@symphony.com"
            },
            "stream": {
                "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
                "streamType": "IM"
            },
            "externalRecipients": false,
            "userAgent": "DESKTOP-40.0.0-10726-MacOSX-10.14.6-Chrome-78.0.3904.108",
            "originalFormat": "com.symphony.messageml.v2"
        }
    }
}
2019-12-12 10:10:02,781 - root - DEBUG - DataFeedEventService/handle_event()
2019-12-12 10:10:02,781 - root - DEBUG - msg_sent_handler function started
2019-12-12 10:10:02,781 - root - DEBUG - message received in IM
2019-12-12 10:10:02,781 - root - DEBUG - im_processor/process_im_message()
2019-12-12 10:10:02,781 - root - DEBUG - {
    "messageId": "pgrdz7v84hKRKBAg8qO1dH___pEFVxytbQ",
    "timestamp": 1576163402578,
    "message": "<div data-format=\"PresentationML\" data-version=\"2.0\" class=\"wysiwyg\"><p><span class=\"entity\" data-entity-id=\"0\">@hydraBot</span> get documentation</p></div>",
    "data": "{\"0\":{\"id\":[{\"type\":\"com.symphony.user.userId\",\"value\":\"349026222348383\"}],\"type\":\"com.symphony.user.mention\"}}",
    "user": {
        "userId": 349026222344902,
        "firstName": "Reed",
        "lastName": "Feldman",
        "displayName": "Reed Feldman (Develop 2)",
        "email": "reed.feldman@symphony.com",
        "username": "reed.feldman@symphony.com"
    },
    "stream": {
        "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
        "streamType": "IM"
    },
    "externalRecipients": false,
    "userAgent": "DESKTOP-40.0.0-10726-MacOSX-10.14.6-Chrome-78.0.3904.108",
    "originalFormat": "com.symphony.messageml.v2"
}
2019-12-12 10:10:02,781 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:10:02,999 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:10:03,212 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:10:03,735 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "messageSent": {
        "message": {
            "messageId": "mo0eWBW1dYi33FOaM0Dsy3___pEFVxtIdA",
            "timestamp": 1576163402941,
            "message": "<div data-format=\"PresentationML\" data-version=\"2.0\">Please select a client entity name to start</div>",
            "user": {
                "userId": 349026222348383,
                "displayName": "hydraBot",
                "email": "hydraBot@example.com",
                "username": "hydraBot"
            },
            "stream": {
                "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
                "streamType": "IM"
            },
            "externalRecipients": false,
            "userAgent": "Agent-2.55.12-Linux-4.14.143-91.122.amzn1.x86_64",
            "originalFormat": "com.symphony.messageml.v2"
        }
    }
}
2019-12-12 10:10:03,735 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:10:05,052 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "symphonyElementsAction": {
        "actionStream": {
            "streamId": "bx_mCNzrEDv4HJEpui4dRX___pGfkDjVdA"
        },
        "formStream": {
            "streamId": "d4qgB1L07mpNwSzd+JBJhH///pGf9bEMdA=="
        },
        "formMessageId": "gwLpbWks5qSUNrBKHvO81X///pEFVxp2dA==",
        "formId": "form_id",
        "formValues": {
            "action": "docs Hudson-Exchange"
        }
    }
}
2019-12-12 10:10:05,052 - root - DEBUG - DataFeedEventService/handle_event()
2019-12-12 10:10:05,052 - root - DEBUG - elements_action_handler
2019-12-12 10:10:05,052 - root - DEBUG - StreamClient/stream_info_v2()
2019-12-12 10:10:05,080 - root - DEBUG - action_processor/im_process
2019-12-12 10:10:05,080 - root - DEBUG - {
    "id": "JOs7Xw",
    "messageId": "uIo1miOSz30T7XFvjg15jn___pEFVxO3bQ",
    "timestamp": 1576163404872,
    "type": "SYMPHONYELEMENTSACTION",
    "initiator": {
        "user": {
            "userId": 349026222344902,
            "firstName": "Reed",
            "lastName": "Feldman",
            "displayName": "Reed Feldman (Develop 2)",
            "email": "reed.feldman@symphony.com",
            "username": "reed.feldman@symphony.com"
        }
    },
    "payload": {
        "symphonyElementsAction": {
            "actionStream": {
                "streamId": "bx_mCNzrEDv4HJEpui4dRX___pGfkDjVdA"
            },
            "formStream": {
                "streamId": "d4qgB1L07mpNwSzd+JBJhH///pGf9bEMdA=="
            },
            "formMessageId": "gwLpbWks5qSUNrBKHvO81X///pEFVxp2dA==",
            "formId": "form_id",
            "formValues": {
                "action": "docs Hudson-Exchange"
            }
        }
    }
}
2019-12-12 10:10:05,081 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:10:05,307 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:10:05,575 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:10:05,785 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "messageSent": {
        "message": {
            "messageId": "IJ85CwmVTm3y95euAPytxH___pEFVxJCdA",
            "timestamp": 1576163405250,
            "message": "<div data-format=\"PresentationML\" data-version=\"2.0\">Found your client company [['docs', 'Hudson-Exchange']].  Now provide an entify identifier like [LEI, Client Identifier, or Exact Name Match]</div>",
            "user": {
                "userId": 349026222348383,
                "displayName": "hydraBot",
                "email": "hydraBot@example.com",
                "username": "hydraBot"
            },
            "stream": {
                "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
                "streamType": "IM"
            },
            "externalRecipients": false,
            "userAgent": "Agent-2.55.12-Linux-4.14.143-91.122.amzn1.x86_64",
            "originalFormat": "com.symphony.messageml.v2"
        }
    }
}
2019-12-12 10:10:05,792 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:10:16,078 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "symphonyElementsAction": {
        "actionStream": {
            "streamId": "bx_mCNzrEDv4HJEpui4dRX___pGfkDjVdA"
        },
        "formStream": {
            "streamId": "d4qgB1L07mpNwSzd+JBJhH///pGf9bEMdA=="
        },
        "formMessageId": "jLeSMkdDKevC7K7IRWDdzH///pEFVxFFdA==",
        "formId": "identifier",
        "formValues": {
            "action": "identifier-doc",
            "match": [
                "Gordons'",
                "GCP",
                ""
            ]
        }
    }
}
2019-12-12 10:10:16,079 - root - DEBUG - DataFeedEventService/handle_event()
2019-12-12 10:10:16,079 - root - DEBUG - elements_action_handler
2019-12-12 10:10:16,079 - root - DEBUG - StreamClient/stream_info_v2()
2019-12-12 10:10:16,108 - root - DEBUG - action_processor/im_process
2019-12-12 10:10:16,108 - root - DEBUG - {
    "id": "RDNw8i",
    "messageId": "xfdkjTSSmInI5Z6vohYeaH___pEFVujRbQ",
    "timestamp": 1576163415854,
    "type": "SYMPHONYELEMENTSACTION",
    "initiator": {
        "user": {
            "userId": 349026222344902,
            "firstName": "Reed",
            "lastName": "Feldman",
            "displayName": "Reed Feldman (Develop 2)",
            "email": "reed.feldman@symphony.com",
            "username": "reed.feldman@symphony.com"
        }
    },
    "payload": {
        "symphonyElementsAction": {
            "actionStream": {
                "streamId": "bx_mCNzrEDv4HJEpui4dRX___pGfkDjVdA"
            },
            "formStream": {
                "streamId": "d4qgB1L07mpNwSzd+JBJhH///pGf9bEMdA=="
            },
            "formMessageId": "jLeSMkdDKevC7K7IRWDdzH///pEFVxFFdA==",
            "formId": "identifier",
            "formValues": {
                "action": "identifier-doc",
                "match": [
                    "Gordons'",
                    "GCP",
                    ""
                ]
            }
        }
    }
}
2019-12-12 10:10:16,108 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:10:16,347 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:10:16,562 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:10:16,777 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "messageSent": {
        "message": {
            "messageId": "s8suFJP7VjUygnuiXQiiLH___pEFVudFdA",
            "timestamp": 1576163416255,
            "message": "<div data-format=\"PresentationML\" data-version=\"2.0\">           <table>               <tbody>                 <tr>                   <td>W-88EN-E</td>                 </tr>                 <tr>                   <td>Audited Financial Statements</td>                 </tr>                 <tr>                   <td>Assests Under Management (AUN)</td>                 </tr>                 <tr>                   <td>Sub-Legal Classification</td>                 </tr>                 <tr>                   <td>Articles of Organization</td>                 </tr>                 <tr>                   <td>LLC Agreement</td>                 </tr>                 <tr>                   <td>Investment Management Agreement</td>                 </tr>                 <tr>                   <td>Offering Memorandum/Prospectus/Offering Circular</td>                 </tr>                 <tr>                   <td>Account Opening Form</td>                 </tr>               </tbody>           </table>         </div>",
            "user": {
                "userId": 349026222348383,
                "displayName": "hydraBot",
                "email": "hydraBot@example.com",
                "username": "hydraBot"
            },
            "stream": {
                "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
                "streamType": "IM"
            },
            "externalRecipients": false,
            "userAgent": "Agent-2.55.12-Linux-4.14.143-91.122.amzn1.x86_64",
            "originalFormat": "com.symphony.messageml.v2"
        }
    }
}
2019-12-12 10:10:16,777 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:10:31,125 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "messageSent": {
        "message": {
            "messageId": "Gwoo01sB-xjWvu9AYTlS1H___pEFVq3rbQ",
            "timestamp": 1576163430932,
            "message": "<div data-format=\"PresentationML\" data-version=\"2.0\" class=\"wysiwyg\"><p><span class=\"entity\" data-entity-id=\"0\">@hydraBot</span> finish</p></div>",
            "data": "{\"0\":{\"id\":[{\"type\":\"com.symphony.user.userId\",\"value\":\"349026222348383\"}],\"type\":\"com.symphony.user.mention\"}}",
            "user": {
                "userId": 349026222344902,
                "firstName": "Reed",
                "lastName": "Feldman",
                "displayName": "Reed Feldman (Develop 2)",
                "email": "reed.feldman@symphony.com",
                "username": "reed.feldman@symphony.com"
            },
            "stream": {
                "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
                "streamType": "IM"
            },
            "externalRecipients": false,
            "userAgent": "DESKTOP-40.0.0-10726-MacOSX-10.14.6-Chrome-78.0.3904.108",
            "originalFormat": "com.symphony.messageml.v2"
        }
    }
}
2019-12-12 10:10:31,125 - root - DEBUG - DataFeedEventService/handle_event()
2019-12-12 10:10:31,125 - root - DEBUG - msg_sent_handler function started
2019-12-12 10:10:31,125 - root - DEBUG - message received in IM
2019-12-12 10:10:31,125 - root - DEBUG - im_processor/process_im_message()
2019-12-12 10:10:31,126 - root - DEBUG - {
    "messageId": "Gwoo01sB-xjWvu9AYTlS1H___pEFVq3rbQ",
    "timestamp": 1576163430932,
    "message": "<div data-format=\"PresentationML\" data-version=\"2.0\" class=\"wysiwyg\"><p><span class=\"entity\" data-entity-id=\"0\">@hydraBot</span> finish</p></div>",
    "data": "{\"0\":{\"id\":[{\"type\":\"com.symphony.user.userId\",\"value\":\"349026222348383\"}],\"type\":\"com.symphony.user.mention\"}}",
    "user": {
        "userId": 349026222344902,
        "firstName": "Reed",
        "lastName": "Feldman",
        "displayName": "Reed Feldman (Develop 2)",
        "email": "reed.feldman@symphony.com",
        "username": "reed.feldman@symphony.com"
    },
    "stream": {
        "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
        "streamType": "IM"
    },
    "externalRecipients": false,
    "userAgent": "DESKTOP-40.0.0-10726-MacOSX-10.14.6-Chrome-78.0.3904.108",
    "originalFormat": "com.symphony.messageml.v2"
}
2019-12-12 10:10:31,126 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:10:31,432 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:10:31,637 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "messageSent": {
        "message": {
            "messageId": "PM95m7_pyFi5q_u2xe1JwX___pEFVqyadA",
            "timestamp": 1576163431275,
            "message": "<div data-format=\"PresentationML\" data-version=\"2.0\">                                           <form id=\"form_id\">                                           <br/>                                             <div style=\"padding-top:1px;padding-left:5px;\">                                                 <button type=\"action\" name=\"finish\">FINISH</button>                                             </div>                                           </form>                                        </div>",
            "user": {
                "userId": 349026222348383,
                "displayName": "hydraBot",
                "email": "hydraBot@example.com",
                "username": "hydraBot"
            },
            "stream": {
                "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
                "streamType": "IM"
            },
            "externalRecipients": false,
            "userAgent": "Agent-2.55.12-Linux-4.14.143-91.122.amzn1.x86_64",
            "originalFormat": "com.symphony.messageml.v2"
        }
    }
}
2019-12-12 10:10:31,638 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:10:32,837 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "symphonyElementsAction": {
        "actionStream": {
            "streamId": "bx_mCNzrEDv4HJEpui4dRX___pGfkDjVdA"
        },
        "formStream": {
            "streamId": "d4qgB1L07mpNwSzd+JBJhH///pGf9bEMdA=="
        },
        "formMessageId": "PM95m7/pyFi5q/u2xe1JwX///pEFVqyadA==",
        "formId": "form_id",
        "formValues": {
            "action": "finish"
        }
    }
}
2019-12-12 10:10:32,837 - root - DEBUG - DataFeedEventService/handle_event()
2019-12-12 10:10:32,837 - root - DEBUG - elements_action_handler
2019-12-12 10:10:32,837 - root - DEBUG - StreamClient/stream_info_v2()
2019-12-12 10:10:32,958 - root - DEBUG - action_processor/im_process
2019-12-12 10:10:32,958 - root - DEBUG - {
    "id": "pxsvGf",
    "messageId": "YLRSwiLwwY_xAcABzs6mV3___pEFVqcnbQ",
    "timestamp": 1576163432664,
    "type": "SYMPHONYELEMENTSACTION",
    "initiator": {
        "user": {
            "userId": 349026222344902,
            "firstName": "Reed",
            "lastName": "Feldman",
            "displayName": "Reed Feldman (Develop 2)",
            "email": "reed.feldman@symphony.com",
            "username": "reed.feldman@symphony.com"
        }
    },
    "payload": {
        "symphonyElementsAction": {
            "actionStream": {
                "streamId": "bx_mCNzrEDv4HJEpui4dRX___pGfkDjVdA"
            },
            "formStream": {
                "streamId": "d4qgB1L07mpNwSzd+JBJhH///pGf9bEMdA=="
            },
            "formMessageId": "PM95m7/pyFi5q/u2xe1JwX///pEFVqyadA==",
            "formId": "form_id",
            "formValues": {
                "action": "finish"
            }
        }
    }
}
2019-12-12 10:10:32,958 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:10:33,163 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:10:33,385 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "messageSent": {
        "message": {
            "messageId": "LUal9uh6Mp8Ty1vCxKrBgn___pEFVqVzdA",
            "timestamp": 1576163433106,
            "message": "<div data-format=\"PresentationML\" data-version=\"2.0\">                                         <br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>                                       </div>",
            "user": {
                "userId": 349026222348383,
                "displayName": "hydraBot",
                "email": "hydraBot@example.com",
                "username": "hydraBot"
            },
            "stream": {
                "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
                "streamType": "IM"
            },
            "externalRecipients": false,
            "userAgent": "Agent-2.55.12-Linux-4.14.143-91.122.amzn1.x86_64",
            "originalFormat": "com.symphony.messageml.v2"
        }
    }
}
2019-12-12 10:10:33,385 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:10:41,258 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "messageSent": {
        "message": {
            "messageId": "O9RSoO6CUT2qLrsDoZZdyX___pEFVoajbQ",
            "timestamp": 1576163440988,
            "message": "<div data-format=\"PresentationML\" data-version=\"2.0\" class=\"wysiwyg\"><p>lets go demo again</p></div>",
            "data": "{}",
            "user": {
                "userId": 349026222344902,
                "firstName": "Reed",
                "lastName": "Feldman",
                "displayName": "Reed Feldman (Develop 2)",
                "email": "reed.feldman@symphony.com",
                "username": "reed.feldman@symphony.com"
            },
            "stream": {
                "streamId": "4RBWbCSEzY14B9F2RE8FXH___pGaF5k4dA",
                "streamType": "ROOM"
            },
            "externalRecipients": false,
            "userAgent": "DESKTOP-40.0.0-10726-MacOSX-10.14.6-Chrome-78.0.3904.108",
            "originalFormat": "com.symphony.messageml.v2"
        }
    }
}
2019-12-12 10:10:41,258 - root - DEBUG - DataFeedEventService/handle_event()
2019-12-12 10:10:41,259 - root - DEBUG - msg_sent_handler function started
2019-12-12 10:10:41,259 - root - DEBUG - room msg received
2019-12-12 10:10:41,259 - root - DEBUG - im_processor/process_room_message()
2019-12-12 10:10:41,259 - root - DEBUG - {
    "messageId": "O9RSoO6CUT2qLrsDoZZdyX___pEFVoajbQ",
    "timestamp": 1576163440988,
    "message": "<div data-format=\"PresentationML\" data-version=\"2.0\" class=\"wysiwyg\"><p>lets go demo again</p></div>",
    "data": "{}",
    "user": {
        "userId": 349026222344902,
        "firstName": "Reed",
        "lastName": "Feldman",
        "displayName": "Reed Feldman (Develop 2)",
        "email": "reed.feldman@symphony.com",
        "username": "reed.feldman@symphony.com"
    },
    "stream": {
        "streamId": "4RBWbCSEzY14B9F2RE8FXH___pGaF5k4dA",
        "streamType": "ROOM"
    },
    "externalRecipients": false,
    "userAgent": "DESKTOP-40.0.0-10726-MacOSX-10.14.6-Chrome-78.0.3904.108",
    "originalFormat": "com.symphony.messageml.v2"
}
2019-12-12 10:10:41,259 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:10:41,473 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:10:41,778 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "messageSent": {
        "message": {
            "messageId": "pLmLTBQtaTk6cqIzt2c7An___pEFVoUFdA",
            "timestamp": 1576163441410,
            "message": "<div data-format=\"PresentationML\" data-version=\"2.0\">                                                 <p>Choose Your Demo:</p>                                                 <br/> <br/>                                                   <form id=\"choose-bot\">                                                     <div style=\"padding-top:1px;\"><button type=\"action\" name=\"kyc\">KYC</button>                                                     <button type=\"action\" name=\"trade-structure\">Trade Builder</button>                                                     <button type=\"action\" name=\"whitesand\">FX Trade Exception</button></div>                                                   </form>                                                 </div>",
            "user": {
                "userId": 349026222348383,
                "displayName": "hydraBot",
                "email": "hydraBot@example.com",
                "username": "hydraBot"
            },
            "stream": {
                "streamId": "4RBWbCSEzY14B9F2RE8FXH___pGaF5k4dA",
                "streamType": "ROOM"
            },
            "externalRecipients": false,
            "userAgent": "Agent-2.55.12-Linux-4.14.143-91.122.amzn1.x86_64",
            "originalFormat": "com.symphony.messageml.v2"
        }
    }
}
2019-12-12 10:10:41,778 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:10:43,664 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "symphonyElementsAction": {
        "actionStream": {
            "streamId": "bx_mCNzrEDv4HJEpui4dRX___pGfkDjVdA"
        },
        "formStream": {
            "streamId": "4RBWbCSEzY14B9F2RE8FXH///pGaF5k4dA=="
        },
        "formMessageId": "pLmLTBQtaTk6cqIzt2c7An///pEFVoUFdA==",
        "formId": "choose-bot",
        "formValues": {
            "action": "trade-structure"
        }
    }
}
2019-12-12 10:10:43,664 - root - DEBUG - DataFeedEventService/handle_event()
2019-12-12 10:10:43,664 - root - DEBUG - elements_action_handler
2019-12-12 10:10:43,664 - root - DEBUG - StreamClient/stream_info_v2()
2019-12-12 10:10:43,805 - root - DEBUG - action_processor/room_process
2019-12-12 10:10:43,805 - root - DEBUG - {
    "id": "drDUvb",
    "messageId": "3EQtWbipBT5urun6po5Ex3___pEFVnzobQ",
    "timestamp": 1576163443479,
    "type": "SYMPHONYELEMENTSACTION",
    "initiator": {
        "user": {
            "userId": 349026222344902,
            "firstName": "Reed",
            "lastName": "Feldman",
            "displayName": "Reed Feldman (Develop 2)",
            "email": "reed.feldman@symphony.com",
            "username": "reed.feldman@symphony.com"
        }
    },
    "payload": {
        "symphonyElementsAction": {
            "actionStream": {
                "streamId": "bx_mCNzrEDv4HJEpui4dRX___pGfkDjVdA"
            },
            "formStream": {
                "streamId": "4RBWbCSEzY14B9F2RE8FXH///pGaF5k4dA=="
            },
            "formMessageId": "pLmLTBQtaTk6cqIzt2c7An///pEFVoUFdA==",
            "formId": "choose-bot",
            "formValues": {
                "action": "trade-structure"
            }
        }
    }
}
2019-12-12 10:10:43,805 - root - DEBUG - StreamClient/create_im()
2019-12-12 10:10:43,984 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:10:44,323 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:10:44,485 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "messageSent": {
        "message": {
            "messageId": "IXY5r-NrA0HojnkhQhRZBn___pEFVnoYdA",
            "timestamp": 1576163444206,
            "message": "<div data-format=\"PresentationML\" data-version=\"2.0\">                                         <h3>Hi! Use hydraBot to assist with all your trading needs! You can try:</h3>                                             <ul>                                             <li><span class=\"entity\" data-entity-id=\"mention1\">@hydraBot</span> help trade</li>                                             <li><span class=\"entity\" data-entity-id=\"mention2\">@hydraBot</span> find the yield</li>                                             <li><span class=\"entity\" data-entity-id=\"mention3\">@hydraBot</span> buy</li>                                             <li><span class=\"entity\" data-entity-id=\"mention4\">@hydraBot</span> finish</li>                                             </ul>                                     </div>",
            "data": "{\"mention1\":{\"type\":\"com.symphony.user.mention\",\"version\":\"1.0\",\"id\":[{\"type\":\"com.symphony.user.userId\",\"value\":\"349026222348383\"}]},\"mention2\":{\"type\":\"com.symphony.user.mention\",\"version\":\"1.0\",\"id\":[{\"type\":\"com.symphony.user.userId\",\"value\":\"349026222348383\"}]},\"mention3\":{\"type\":\"com.symphony.user.mention\",\"version\":\"1.0\",\"id\":[{\"type\":\"com.symphony.user.userId\",\"value\":\"349026222348383\"}]},\"mention4\":{\"type\":\"com.symphony.user.mention\",\"version\":\"1.0\",\"id\":[{\"type\":\"com.symphony.user.userId\",\"value\":\"349026222348383\"}]}}",
            "user": {
                "userId": 349026222348383,
                "displayName": "hydraBot",
                "email": "hydraBot@example.com",
                "username": "hydraBot"
            },
            "stream": {
                "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
                "streamType": "IM"
            },
            "externalRecipients": false,
            "userAgent": "Agent-2.55.12-Linux-4.14.143-91.122.amzn1.x86_64",
            "originalFormat": "com.symphony.messageml.v2"
        }
    }
}
2019-12-12 10:10:44,485 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:10:57,752 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "messageSent": {
        "message": {
            "messageId": "6hXtX_8q6MnYeXFRFFQQWH___pEFVkXlbQ",
            "timestamp": 1576163457562,
            "message": "<div data-format=\"PresentationML\" data-version=\"2.0\" class=\"wysiwyg\"><p><span class=\"entity\" data-entity-id=\"0\">@hydraBot</span> find the yield of 6m tbill</p></div>",
            "data": "{\"0\":{\"id\":[{\"type\":\"com.symphony.user.userId\",\"value\":\"349026222348383\"}],\"type\":\"com.symphony.user.mention\"}}",
            "user": {
                "userId": 349026222344902,
                "firstName": "Reed",
                "lastName": "Feldman",
                "displayName": "Reed Feldman (Develop 2)",
                "email": "reed.feldman@symphony.com",
                "username": "reed.feldman@symphony.com"
            },
            "stream": {
                "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
                "streamType": "IM"
            },
            "externalRecipients": false,
            "userAgent": "DESKTOP-40.0.0-10726-MacOSX-10.14.6-Chrome-78.0.3904.108",
            "originalFormat": "com.symphony.messageml.v2"
        }
    }
}
2019-12-12 10:10:57,752 - root - DEBUG - DataFeedEventService/handle_event()
2019-12-12 10:10:57,753 - root - DEBUG - msg_sent_handler function started
2019-12-12 10:10:57,753 - root - DEBUG - message received in IM
2019-12-12 10:10:57,753 - root - DEBUG - im_processor/process_im_message()
2019-12-12 10:10:57,753 - root - DEBUG - {
    "messageId": "6hXtX_8q6MnYeXFRFFQQWH___pEFVkXlbQ",
    "timestamp": 1576163457562,
    "message": "<div data-format=\"PresentationML\" data-version=\"2.0\" class=\"wysiwyg\"><p><span class=\"entity\" data-entity-id=\"0\">@hydraBot</span> find the yield of 6m tbill</p></div>",
    "data": "{\"0\":{\"id\":[{\"type\":\"com.symphony.user.userId\",\"value\":\"349026222348383\"}],\"type\":\"com.symphony.user.mention\"}}",
    "user": {
        "userId": 349026222344902,
        "firstName": "Reed",
        "lastName": "Feldman",
        "displayName": "Reed Feldman (Develop 2)",
        "email": "reed.feldman@symphony.com",
        "username": "reed.feldman@symphony.com"
    },
    "stream": {
        "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
        "streamType": "IM"
    },
    "externalRecipients": false,
    "userAgent": "DESKTOP-40.0.0-10726-MacOSX-10.14.6-Chrome-78.0.3904.108",
    "originalFormat": "com.symphony.messageml.v2"
}
2019-12-12 10:10:57,755 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:10:57,973 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:10:58,199 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "messageSent": {
        "message": {
            "messageId": "B_eXcMC3ekw8Pu6KwHNRaH___pEFVkSOdA",
            "timestamp": 1576163457911,
            "message": "<div data-format=\"PresentationML\" data-version=\"2.0\">       <table>         <thead>           <tr>             <td>Cusip</td>             <td>Maturity Date</td>             <td>Yield</td>           </tr>         </thead>         <tbody>           <tr>             <td>92343VBG8</td>             <td>12/04/2019</td>             <td>2.406%</td>           </tr>         </tbody>       </table>       <br/> </div>",
            "user": {
                "userId": 349026222348383,
                "displayName": "hydraBot",
                "email": "hydraBot@example.com",
                "username": "hydraBot"
            },
            "stream": {
                "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
                "streamType": "IM"
            },
            "externalRecipients": false,
            "userAgent": "Agent-2.55.12-Linux-4.14.143-91.122.amzn1.x86_64",
            "originalFormat": "com.symphony.messageml.v2"
        }
    }
}
2019-12-12 10:10:58,199 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:11:10,345 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "messageSent": {
        "message": {
            "messageId": "H5v9S91o2aHYbkYR9-7n_n___pEFVhT0bQ",
            "timestamp": 1576163470091,
            "message": "<div data-format=\"PresentationML\" data-version=\"2.0\" class=\"wysiwyg\"><p><span class=\"entity\" data-entity-id=\"0\">@hydraBot</span> buy</p></div>",
            "data": "{\"0\":{\"id\":[{\"type\":\"com.symphony.user.userId\",\"value\":\"349026222348383\"}],\"type\":\"com.symphony.user.mention\"}}",
            "user": {
                "userId": 349026222344902,
                "firstName": "Reed",
                "lastName": "Feldman",
                "displayName": "Reed Feldman (Develop 2)",
                "email": "reed.feldman@symphony.com",
                "username": "reed.feldman@symphony.com"
            },
            "stream": {
                "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
                "streamType": "IM"
            },
            "externalRecipients": false,
            "userAgent": "DESKTOP-40.0.0-10726-MacOSX-10.14.6-Chrome-78.0.3904.108",
            "originalFormat": "com.symphony.messageml.v2"
        }
    }
}
2019-12-12 10:11:10,346 - root - DEBUG - DataFeedEventService/handle_event()
2019-12-12 10:11:10,346 - root - DEBUG - msg_sent_handler function started
2019-12-12 10:11:10,347 - root - DEBUG - message received in IM
2019-12-12 10:11:10,347 - root - DEBUG - im_processor/process_im_message()
2019-12-12 10:11:10,347 - root - DEBUG - {
    "messageId": "H5v9S91o2aHYbkYR9-7n_n___pEFVhT0bQ",
    "timestamp": 1576163470091,
    "message": "<div data-format=\"PresentationML\" data-version=\"2.0\" class=\"wysiwyg\"><p><span class=\"entity\" data-entity-id=\"0\">@hydraBot</span> buy</p></div>",
    "data": "{\"0\":{\"id\":[{\"type\":\"com.symphony.user.userId\",\"value\":\"349026222348383\"}],\"type\":\"com.symphony.user.mention\"}}",
    "user": {
        "userId": 349026222344902,
        "firstName": "Reed",
        "lastName": "Feldman",
        "displayName": "Reed Feldman (Develop 2)",
        "email": "reed.feldman@symphony.com",
        "username": "reed.feldman@symphony.com"
    },
    "stream": {
        "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
        "streamType": "IM"
    },
    "externalRecipients": false,
    "userAgent": "DESKTOP-40.0.0-10726-MacOSX-10.14.6-Chrome-78.0.3904.108",
    "originalFormat": "com.symphony.messageml.v2"
}
2019-12-12 10:11:10,349 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:11:10,751 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:11:10,960 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "messageSent": {
        "message": {
            "messageId": "hAwk3FmetRf5Z8j0PmywSX___pEFVhNZdA",
            "timestamp": 1576163470507,
            "message": "<div data-format=\"PresentationML\" data-version=\"2.0\">   <form id=\"identifier\">     <input type=\"text\" name=\"cusip\" placeholder=\"Cusip or Identifier\"/>     <input type=\"text\" name=\"maturity-date\" placeholder=\"Maturity Date\"/>     <input type=\"text\" name=\"yield\" placeholder=\"Yield\"/>     <div style=\"padding-top:1px;padding-left:5px;\"><button type=\"action\" name=\"buy\">SUBMIT</button></div>   </form> </div>",
            "user": {
                "userId": 349026222348383,
                "displayName": "hydraBot",
                "email": "hydraBot@example.com",
                "username": "hydraBot"
            },
            "stream": {
                "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
                "streamType": "IM"
            },
            "externalRecipients": false,
            "userAgent": "Agent-2.55.12-Linux-4.14.143-91.122.amzn1.x86_64",
            "originalFormat": "com.symphony.messageml.v2"
        }
    }
}
2019-12-12 10:11:10,960 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:11:15,648 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "symphonyElementsAction": {
        "actionStream": {
            "streamId": "bx_mCNzrEDv4HJEpui4dRX___pGfkDjVdA"
        },
        "formStream": {
            "streamId": "d4qgB1L07mpNwSzd+JBJhH///pGf9bEMdA=="
        },
        "formMessageId": "hAwk3FmetRf5Z8j0PmywSX///pEFVhNZdA==",
        "formId": "identifier",
        "formValues": {
            "action": "buy",
            "cusip": "92343VBG8",
            "maturity-date": "",
            "yield": ""
        }
    }
}
2019-12-12 10:11:15,648 - root - DEBUG - DataFeedEventService/handle_event()
2019-12-12 10:11:15,648 - root - DEBUG - elements_action_handler
2019-12-12 10:11:15,648 - root - DEBUG - StreamClient/stream_info_v2()
2019-12-12 10:11:15,768 - root - DEBUG - action_processor/im_process
2019-12-12 10:11:15,768 - root - DEBUG - {
    "id": "xNjaAK",
    "messageId": "xceCLW4p-lH_p9GUsA_wTn___pEFVf_qbQ",
    "timestamp": 1576163475477,
    "type": "SYMPHONYELEMENTSACTION",
    "initiator": {
        "user": {
            "userId": 349026222344902,
            "firstName": "Reed",
            "lastName": "Feldman",
            "displayName": "Reed Feldman (Develop 2)",
            "email": "reed.feldman@symphony.com",
            "username": "reed.feldman@symphony.com"
        }
    },
    "payload": {
        "symphonyElementsAction": {
            "actionStream": {
                "streamId": "bx_mCNzrEDv4HJEpui4dRX___pGfkDjVdA"
            },
            "formStream": {
                "streamId": "d4qgB1L07mpNwSzd+JBJhH///pGf9bEMdA=="
            },
            "formMessageId": "hAwk3FmetRf5Z8j0PmywSX///pEFVhNZdA==",
            "formId": "identifier",
            "formValues": {
                "action": "buy",
                "cusip": "92343VBG8",
                "maturity-date": "",
                "yield": ""
            }
        }
    }
}
2019-12-12 10:11:15,768 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:11:17,988 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:11:18,413 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:11:18,640 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "messageSent": {
        "message": {
            "messageId": "MlYIjWSP13aqv6o8EIHndn___pEFVf44dA",
            "timestamp": 1576163475917,
            "message": "<div data-format=\"PresentationML\" data-version=\"2.0\">Building order for you</div>",
            "user": {
                "userId": 349026222348383,
                "displayName": "hydraBot",
                "email": "hydraBot@example.com",
                "username": "hydraBot"
            },
            "stream": {
                "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
                "streamType": "IM"
            },
            "externalRecipients": false,
            "userAgent": "Agent-2.55.12-Linux-4.14.143-91.122.amzn1.x86_64",
            "originalFormat": "com.symphony.messageml.v2"
        }
    }
}
2019-12-12 10:11:18,640 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:11:36,531 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "messageSent": {
        "message": {
            "messageId": "q2sv_G45X7SgyM3tyIbK6n___pEFVa7mbQ",
            "timestamp": 1576163496217,
            "message": "<div data-format=\"PresentationML\" data-version=\"2.0\" class=\"wysiwyg\"><p><span class=\"entity\" data-entity-id=\"0\">@hydraBot</span> buy</p></div>",
            "data": "{\"0\":{\"id\":[{\"type\":\"com.symphony.user.userId\",\"value\":\"349026222348383\"}],\"type\":\"com.symphony.user.mention\"}}",
            "user": {
                "userId": 349026222344902,
                "firstName": "Reed",
                "lastName": "Feldman",
                "displayName": "Reed Feldman (Develop 2)",
                "email": "reed.feldman@symphony.com",
                "username": "reed.feldman@symphony.com"
            },
            "stream": {
                "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
                "streamType": "IM"
            },
            "externalRecipients": false,
            "userAgent": "DESKTOP-40.0.0-10726-MacOSX-10.14.6-Chrome-78.0.3904.108",
            "originalFormat": "com.symphony.messageml.v2"
        }
    }
}
2019-12-12 10:11:36,531 - root - DEBUG - DataFeedEventService/handle_event()
2019-12-12 10:11:36,531 - root - DEBUG - msg_sent_handler function started
2019-12-12 10:11:36,531 - root - DEBUG - message received in IM
2019-12-12 10:11:36,531 - root - DEBUG - im_processor/process_im_message()
2019-12-12 10:11:36,531 - root - DEBUG - {
    "messageId": "q2sv_G45X7SgyM3tyIbK6n___pEFVa7mbQ",
    "timestamp": 1576163496217,
    "message": "<div data-format=\"PresentationML\" data-version=\"2.0\" class=\"wysiwyg\"><p><span class=\"entity\" data-entity-id=\"0\">@hydraBot</span> buy</p></div>",
    "data": "{\"0\":{\"id\":[{\"type\":\"com.symphony.user.userId\",\"value\":\"349026222348383\"}],\"type\":\"com.symphony.user.mention\"}}",
    "user": {
        "userId": 349026222344902,
        "firstName": "Reed",
        "lastName": "Feldman",
        "displayName": "Reed Feldman (Develop 2)",
        "email": "reed.feldman@symphony.com",
        "username": "reed.feldman@symphony.com"
    },
    "stream": {
        "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
        "streamType": "IM"
    },
    "externalRecipients": false,
    "userAgent": "DESKTOP-40.0.0-10726-MacOSX-10.14.6-Chrome-78.0.3904.108",
    "originalFormat": "com.symphony.messageml.v2"
}
2019-12-12 10:11:36,532 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:11:36,764 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:11:37,036 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "messageSent": {
        "message": {
            "messageId": "oBpKxcXlFTWonOJTkKBwSn___pEFVa0QdA",
            "timestamp": 1576163496693,
            "message": "<div data-format=\"PresentationML\" data-version=\"2.0\">   <form id=\"identifier\">     <input type=\"text\" name=\"cusip\" placeholder=\"Cusip or Identifier\"/>     <input type=\"text\" name=\"maturity-date\" placeholder=\"Maturity Date\"/>     <input type=\"text\" name=\"yield\" placeholder=\"Yield\"/>     <div style=\"padding-top:1px;padding-left:5px;\"><button type=\"action\" name=\"buy\">SUBMIT</button></div>   </form> </div>",
            "user": {
                "userId": 349026222348383,
                "displayName": "hydraBot",
                "email": "hydraBot@example.com",
                "username": "hydraBot"
            },
            "stream": {
                "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
                "streamType": "IM"
            },
            "externalRecipients": false,
            "userAgent": "Agent-2.55.12-Linux-4.14.143-91.122.amzn1.x86_64",
            "originalFormat": "com.symphony.messageml.v2"
        }
    }
}
2019-12-12 10:11:37,036 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:11:44,630 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "symphonyElementsAction": {
        "actionStream": {
            "streamId": "bx_mCNzrEDv4HJEpui4dRX___pGfkDjVdA"
        },
        "formStream": {
            "streamId": "d4qgB1L07mpNwSzd+JBJhH///pGf9bEMdA=="
        },
        "formMessageId": "oBpKxcXlFTWonOJTkKBwSn///pEFVa0QdA==",
        "formId": "identifier",
        "formValues": {
            "action": "buy",
            "cusip": "Verizon",
            "maturity-date": "",
            "yield": ""
        }
    }
}
2019-12-12 10:11:44,630 - root - DEBUG - DataFeedEventService/handle_event()
2019-12-12 10:11:44,630 - root - DEBUG - elements_action_handler
2019-12-12 10:11:44,630 - root - DEBUG - StreamClient/stream_info_v2()
2019-12-12 10:11:44,902 - root - DEBUG - action_processor/im_process
2019-12-12 10:11:44,902 - root - DEBUG - {
    "id": "gqqQOr",
    "messageId": "YvgTOrTRIWCLl-hFBdLc63___pEFVY70bQ",
    "timestamp": 1576163504395,
    "type": "SYMPHONYELEMENTSACTION",
    "initiator": {
        "user": {
            "userId": 349026222344902,
            "firstName": "Reed",
            "lastName": "Feldman",
            "displayName": "Reed Feldman (Develop 2)",
            "email": "reed.feldman@symphony.com",
            "username": "reed.feldman@symphony.com"
        }
    },
    "payload": {
        "symphonyElementsAction": {
            "actionStream": {
                "streamId": "bx_mCNzrEDv4HJEpui4dRX___pGfkDjVdA"
            },
            "formStream": {
                "streamId": "d4qgB1L07mpNwSzd+JBJhH///pGf9bEMdA=="
            },
            "formMessageId": "oBpKxcXlFTWonOJTkKBwSn///pEFVa0QdA==",
            "formId": "identifier",
            "formValues": {
                "action": "buy",
                "cusip": "Verizon",
                "maturity-date": "",
                "yield": ""
            }
        }
    }
}
2019-12-12 10:11:44,902 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:11:47,111 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:11:47,412 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:11:47,628 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "messageSent": {
        "message": {
            "messageId": "iF6ZVpv9Dl3AeI80Ci0Dq3___pEFVYxrdA",
            "timestamp": 1576163505049,
            "message": "<div data-format=\"PresentationML\" data-version=\"2.0\">Building order for you</div>",
            "user": {
                "userId": 349026222348383,
                "displayName": "hydraBot",
                "email": "hydraBot@example.com",
                "username": "hydraBot"
            },
            "stream": {
                "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
                "streamType": "IM"
            },
            "externalRecipients": false,
            "userAgent": "Agent-2.55.12-Linux-4.14.143-91.122.amzn1.x86_64",
            "originalFormat": "com.symphony.messageml.v2"
        }
    }
}
2019-12-12 10:11:47,628 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:11:59,806 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "messageSent": {
        "message": {
            "messageId": "prFbxtByhVtyXYJCcHuKJX___pEFVVOpbQ",
            "timestamp": 1576163519574,
            "message": "<div data-format=\"PresentationML\" data-version=\"2.0\" class=\"wysiwyg\"><p><span class=\"entity\" data-entity-id=\"0\">@hydraBot</span> help</p></div>",
            "data": "{\"0\":{\"id\":[{\"type\":\"com.symphony.user.userId\",\"value\":\"349026222348383\"}],\"type\":\"com.symphony.user.mention\"}}",
            "user": {
                "userId": 349026222344902,
                "firstName": "Reed",
                "lastName": "Feldman",
                "displayName": "Reed Feldman (Develop 2)",
                "email": "reed.feldman@symphony.com",
                "username": "reed.feldman@symphony.com"
            },
            "stream": {
                "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
                "streamType": "IM"
            },
            "externalRecipients": false,
            "userAgent": "DESKTOP-40.0.0-10726-MacOSX-10.14.6-Chrome-78.0.3904.108",
            "originalFormat": "com.symphony.messageml.v2"
        }
    }
}
2019-12-12 10:11:59,806 - root - DEBUG - DataFeedEventService/handle_event()
2019-12-12 10:11:59,806 - root - DEBUG - msg_sent_handler function started
2019-12-12 10:11:59,806 - root - DEBUG - message received in IM
2019-12-12 10:11:59,806 - root - DEBUG - im_processor/process_im_message()
2019-12-12 10:11:59,806 - root - DEBUG - {
    "messageId": "prFbxtByhVtyXYJCcHuKJX___pEFVVOpbQ",
    "timestamp": 1576163519574,
    "message": "<div data-format=\"PresentationML\" data-version=\"2.0\" class=\"wysiwyg\"><p><span class=\"entity\" data-entity-id=\"0\">@hydraBot</span> help</p></div>",
    "data": "{\"0\":{\"id\":[{\"type\":\"com.symphony.user.userId\",\"value\":\"349026222348383\"}],\"type\":\"com.symphony.user.mention\"}}",
    "user": {
        "userId": 349026222344902,
        "firstName": "Reed",
        "lastName": "Feldman",
        "displayName": "Reed Feldman (Develop 2)",
        "email": "reed.feldman@symphony.com",
        "username": "reed.feldman@symphony.com"
    },
    "stream": {
        "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
        "streamType": "IM"
    },
    "externalRecipients": false,
    "userAgent": "DESKTOP-40.0.0-10726-MacOSX-10.14.6-Chrome-78.0.3904.108",
    "originalFormat": "com.symphony.messageml.v2"
}
2019-12-12 10:11:59,807 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:12:00,090 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:12:00,258 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "messageSent": {
        "message": {
            "messageId": "LJLeNiPZJnu_Qmg4v-GM_3___pEFVVHwdA",
            "timestamp": 1576163520021,
            "message": "<div data-format=\"PresentationML\" data-version=\"2.0\">                                         <ul>                                         <li><span class=\"entity\" data-entity-id=\"mention1\">@hydraBot</span> help onboard</li>                                         <li><span class=\"entity\" data-entity-id=\"mention2\">@hydraBot</span> help trade</li>                                         <li><span class=\"entity\" data-entity-id=\"mention3\">@hydraBot</span> help resolve</li>                                         <li><span class=\"entity\" data-entity-id=\"mention4\">@hydraBot</span> finish</li>                                         </ul>                                 </div>",
            "data": "{\"mention1\":{\"type\":\"com.symphony.user.mention\",\"version\":\"1.0\",\"id\":[{\"type\":\"com.symphony.user.userId\",\"value\":\"349026222348383\"}]},\"mention2\":{\"type\":\"com.symphony.user.mention\",\"version\":\"1.0\",\"id\":[{\"type\":\"com.symphony.user.userId\",\"value\":\"349026222348383\"}]},\"mention3\":{\"type\":\"com.symphony.user.mention\",\"version\":\"1.0\",\"id\":[{\"type\":\"com.symphony.user.userId\",\"value\":\"349026222348383\"}]},\"mention4\":{\"type\":\"com.symphony.user.mention\",\"version\":\"1.0\",\"id\":[{\"type\":\"com.symphony.user.userId\",\"value\":\"349026222348383\"}]}}",
            "user": {
                "userId": 349026222348383,
                "displayName": "hydraBot",
                "email": "hydraBot@example.com",
                "username": "hydraBot"
            },
            "stream": {
                "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
                "streamType": "IM"
            },
            "externalRecipients": false,
            "userAgent": "Agent-2.55.12-Linux-4.14.143-91.122.amzn1.x86_64",
            "originalFormat": "com.symphony.messageml.v2"
        }
    }
}
2019-12-12 10:12:00,258 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:12:05,332 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "messageSent": {
        "message": {
            "messageId": "CbINfJ3iMWcaXMVv5Yr_OX___pEFVT3mbQ",
            "timestamp": 1576163525145,
            "message": "<div data-format=\"PresentationML\" data-version=\"2.0\" class=\"wysiwyg\"><p><span class=\"entity\" data-entity-id=\"0\">@hydraBot</span> help trade</p></div>",
            "data": "{\"0\":{\"id\":[{\"type\":\"com.symphony.user.userId\",\"value\":\"349026222348383\"}],\"type\":\"com.symphony.user.mention\"}}",
            "user": {
                "userId": 349026222344902,
                "firstName": "Reed",
                "lastName": "Feldman",
                "displayName": "Reed Feldman (Develop 2)",
                "email": "reed.feldman@symphony.com",
                "username": "reed.feldman@symphony.com"
            },
            "stream": {
                "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
                "streamType": "IM"
            },
            "externalRecipients": false,
            "userAgent": "DESKTOP-40.0.0-10726-MacOSX-10.14.6-Chrome-78.0.3904.108",
            "originalFormat": "com.symphony.messageml.v2"
        }
    }
}
2019-12-12 10:12:05,333 - root - DEBUG - DataFeedEventService/handle_event()
2019-12-12 10:12:05,333 - root - DEBUG - msg_sent_handler function started
2019-12-12 10:12:05,333 - root - DEBUG - message received in IM
2019-12-12 10:12:05,333 - root - DEBUG - im_processor/process_im_message()
2019-12-12 10:12:05,333 - root - DEBUG - {
    "messageId": "CbINfJ3iMWcaXMVv5Yr_OX___pEFVT3mbQ",
    "timestamp": 1576163525145,
    "message": "<div data-format=\"PresentationML\" data-version=\"2.0\" class=\"wysiwyg\"><p><span class=\"entity\" data-entity-id=\"0\">@hydraBot</span> help trade</p></div>",
    "data": "{\"0\":{\"id\":[{\"type\":\"com.symphony.user.userId\",\"value\":\"349026222348383\"}],\"type\":\"com.symphony.user.mention\"}}",
    "user": {
        "userId": 349026222344902,
        "firstName": "Reed",
        "lastName": "Feldman",
        "displayName": "Reed Feldman (Develop 2)",
        "email": "reed.feldman@symphony.com",
        "username": "reed.feldman@symphony.com"
    },
    "stream": {
        "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
        "streamType": "IM"
    },
    "externalRecipients": false,
    "userAgent": "DESKTOP-40.0.0-10726-MacOSX-10.14.6-Chrome-78.0.3904.108",
    "originalFormat": "com.symphony.messageml.v2"
}
2019-12-12 10:12:05,333 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:12:05,638 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:12:05,858 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "messageSent": {
        "message": {
            "messageId": "yQdCjd1mFoGcYTjH0wgogH___pEFVTxQdA",
            "timestamp": 1576163525558,
            "message": "<div data-format=\"PresentationML\" data-version=\"2.0\">                                     <h3>Hi! Use hydraBot to assist with all your trading needs! You can try:</h3>                                         <ul>                                         <li><span class=\"entity\" data-entity-id=\"mention1\">@hydraBot</span> help trade</li>                                         <li><span class=\"entity\" data-entity-id=\"mention2\">@hydraBot</span> find the yield</li>                                         <li><span class=\"entity\" data-entity-id=\"mention3\">@hydraBot</span> buy</li>                                         <li><span class=\"entity\" data-entity-id=\"mention4\">@hydraBot</span> finish</li>                                         </ul>                                 </div>",
            "data": "{\"mention1\":{\"type\":\"com.symphony.user.mention\",\"version\":\"1.0\",\"id\":[{\"type\":\"com.symphony.user.userId\",\"value\":\"349026222348383\"}]},\"mention2\":{\"type\":\"com.symphony.user.mention\",\"version\":\"1.0\",\"id\":[{\"type\":\"com.symphony.user.userId\",\"value\":\"349026222348383\"}]},\"mention3\":{\"type\":\"com.symphony.user.mention\",\"version\":\"1.0\",\"id\":[{\"type\":\"com.symphony.user.userId\",\"value\":\"349026222348383\"}]},\"mention4\":{\"type\":\"com.symphony.user.mention\",\"version\":\"1.0\",\"id\":[{\"type\":\"com.symphony.user.userId\",\"value\":\"349026222348383\"}]}}",
            "user": {
                "userId": 349026222348383,
                "displayName": "hydraBot",
                "email": "hydraBot@example.com",
                "username": "hydraBot"
            },
            "stream": {
                "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
                "streamType": "IM"
            },
            "externalRecipients": false,
            "userAgent": "Agent-2.55.12-Linux-4.14.143-91.122.amzn1.x86_64",
            "originalFormat": "com.symphony.messageml.v2"
        }
    }
}
2019-12-12 10:12:05,858 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:12:27,082 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "messageSent": {
        "message": {
            "messageId": "wl4Jr2VmuB-TB36fQda2EX___pEFVOj2bQ",
            "timestamp": 1576163546889,
            "message": "<div data-format=\"PresentationML\" data-version=\"2.0\" class=\"wysiwyg\"><p><span class=\"entity\" data-entity-id=\"0\">@hydraBot</span> finish</p></div>",
            "data": "{\"0\":{\"id\":[{\"type\":\"com.symphony.user.userId\",\"value\":\"349026222348383\"}],\"type\":\"com.symphony.user.mention\"}}",
            "user": {
                "userId": 349026222344902,
                "firstName": "Reed",
                "lastName": "Feldman",
                "displayName": "Reed Feldman (Develop 2)",
                "email": "reed.feldman@symphony.com",
                "username": "reed.feldman@symphony.com"
            },
            "stream": {
                "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
                "streamType": "IM"
            },
            "externalRecipients": false,
            "userAgent": "DESKTOP-40.0.0-10726-MacOSX-10.14.6-Chrome-78.0.3904.108",
            "originalFormat": "com.symphony.messageml.v2"
        }
    }
}
2019-12-12 10:12:27,082 - root - DEBUG - DataFeedEventService/handle_event()
2019-12-12 10:12:27,082 - root - DEBUG - msg_sent_handler function started
2019-12-12 10:12:27,082 - root - DEBUG - message received in IM
2019-12-12 10:12:27,082 - root - DEBUG - im_processor/process_im_message()
2019-12-12 10:12:27,082 - root - DEBUG - {
    "messageId": "wl4Jr2VmuB-TB36fQda2EX___pEFVOj2bQ",
    "timestamp": 1576163546889,
    "message": "<div data-format=\"PresentationML\" data-version=\"2.0\" class=\"wysiwyg\"><p><span class=\"entity\" data-entity-id=\"0\">@hydraBot</span> finish</p></div>",
    "data": "{\"0\":{\"id\":[{\"type\":\"com.symphony.user.userId\",\"value\":\"349026222348383\"}],\"type\":\"com.symphony.user.mention\"}}",
    "user": {
        "userId": 349026222344902,
        "firstName": "Reed",
        "lastName": "Feldman",
        "displayName": "Reed Feldman (Develop 2)",
        "email": "reed.feldman@symphony.com",
        "username": "reed.feldman@symphony.com"
    },
    "stream": {
        "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
        "streamType": "IM"
    },
    "externalRecipients": false,
    "userAgent": "DESKTOP-40.0.0-10726-MacOSX-10.14.6-Chrome-78.0.3904.108",
    "originalFormat": "com.symphony.messageml.v2"
}
2019-12-12 10:12:27,082 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:12:27,280 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:12:27,491 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "messageSent": {
        "message": {
            "messageId": "fWDVB4obOhFmQ64KRBwzkX___pEFVOendA",
            "timestamp": 1576163547229,
            "message": "<div data-format=\"PresentationML\" data-version=\"2.0\">                                           <form id=\"form_id\">                                           <br/>                                             <div style=\"padding-top:1px;padding-left:5px;\">                                                 <button type=\"action\" name=\"finish\">FINISH</button>                                             </div>                                           </form>                                        </div>",
            "user": {
                "userId": 349026222348383,
                "displayName": "hydraBot",
                "email": "hydraBot@example.com",
                "username": "hydraBot"
            },
            "stream": {
                "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
                "streamType": "IM"
            },
            "externalRecipients": false,
            "userAgent": "Agent-2.55.12-Linux-4.14.143-91.122.amzn1.x86_64",
            "originalFormat": "com.symphony.messageml.v2"
        }
    }
}
2019-12-12 10:12:27,492 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:12:29,045 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "symphonyElementsAction": {
        "actionStream": {
            "streamId": "bx_mCNzrEDv4HJEpui4dRX___pGfkDjVdA"
        },
        "formStream": {
            "streamId": "d4qgB1L07mpNwSzd+JBJhH///pGf9bEMdA=="
        },
        "formMessageId": "fWDVB4obOhFmQ64KRBwzkX///pEFVOendA==",
        "formId": "form_id",
        "formValues": {
            "action": "finish"
        }
    }
}
2019-12-12 10:12:29,045 - root - DEBUG - DataFeedEventService/handle_event()
2019-12-12 10:12:29,045 - root - DEBUG - elements_action_handler
2019-12-12 10:12:29,045 - root - DEBUG - StreamClient/stream_info_v2()
2019-12-12 10:12:29,159 - root - DEBUG - action_processor/im_process
2019-12-12 10:12:29,160 - root - DEBUG - {
    "id": "pCwo5m",
    "messageId": "FP_GnC3TjKTH_a_f3LQ7gH___pEFVOEybQ",
    "timestamp": 1576163548877,
    "type": "SYMPHONYELEMENTSACTION",
    "initiator": {
        "user": {
            "userId": 349026222344902,
            "firstName": "Reed",
            "lastName": "Feldman",
            "displayName": "Reed Feldman (Develop 2)",
            "email": "reed.feldman@symphony.com",
            "username": "reed.feldman@symphony.com"
        }
    },
    "payload": {
        "symphonyElementsAction": {
            "actionStream": {
                "streamId": "bx_mCNzrEDv4HJEpui4dRX___pGfkDjVdA"
            },
            "formStream": {
                "streamId": "d4qgB1L07mpNwSzd+JBJhH///pGf9bEMdA=="
            },
            "formMessageId": "fWDVB4obOhFmQ64KRBwzkX///pEFVOendA==",
            "formId": "form_id",
            "formValues": {
                "action": "finish"
            }
        }
    }
}
2019-12-12 10:12:29,160 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:12:29,372 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:12:29,591 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "messageSent": {
        "message": {
            "messageId": "n-v2MLKOzo1sQd5yqPc9on___pEFVN-JdA",
            "timestamp": 1576163549308,
            "message": "<div data-format=\"PresentationML\" data-version=\"2.0\">                                         <br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>                                       </div>",
            "user": {
                "userId": 349026222348383,
                "displayName": "hydraBot",
                "email": "hydraBot@example.com",
                "username": "hydraBot"
            },
            "stream": {
                "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
                "streamType": "IM"
            },
            "externalRecipients": false,
            "userAgent": "Agent-2.55.12-Linux-4.14.143-91.122.amzn1.x86_64",
            "originalFormat": "com.symphony.messageml.v2"
        }
    }
}
2019-12-12 10:12:29,591 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:12:33,554 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "messageSent": {
        "message": {
            "messageId": "BFrv19SuOTNw5vxlWdRXlH___pEFVM-gbQ",
            "timestamp": 1576163553375,
            "message": "<div data-format=\"PresentationML\" data-version=\"2.0\" class=\"wysiwyg\"><p>last time</p></div>",
            "data": "{}",
            "user": {
                "userId": 349026222344902,
                "firstName": "Reed",
                "lastName": "Feldman",
                "displayName": "Reed Feldman (Develop 2)",
                "email": "reed.feldman@symphony.com",
                "username": "reed.feldman@symphony.com"
            },
            "stream": {
                "streamId": "4RBWbCSEzY14B9F2RE8FXH___pGaF5k4dA",
                "streamType": "ROOM"
            },
            "externalRecipients": false,
            "userAgent": "DESKTOP-40.0.0-10726-MacOSX-10.14.6-Chrome-78.0.3904.108",
            "originalFormat": "com.symphony.messageml.v2"
        }
    }
}
2019-12-12 10:12:33,554 - root - DEBUG - DataFeedEventService/handle_event()
2019-12-12 10:12:33,554 - root - DEBUG - msg_sent_handler function started
2019-12-12 10:12:33,554 - root - DEBUG - room msg received
2019-12-12 10:12:33,554 - root - DEBUG - im_processor/process_room_message()
2019-12-12 10:12:33,554 - root - DEBUG - {
    "messageId": "BFrv19SuOTNw5vxlWdRXlH___pEFVM-gbQ",
    "timestamp": 1576163553375,
    "message": "<div data-format=\"PresentationML\" data-version=\"2.0\" class=\"wysiwyg\"><p>last time</p></div>",
    "data": "{}",
    "user": {
        "userId": 349026222344902,
        "firstName": "Reed",
        "lastName": "Feldman",
        "displayName": "Reed Feldman (Develop 2)",
        "email": "reed.feldman@symphony.com",
        "username": "reed.feldman@symphony.com"
    },
    "stream": {
        "streamId": "4RBWbCSEzY14B9F2RE8FXH___pGaF5k4dA",
        "streamType": "ROOM"
    },
    "externalRecipients": false,
    "userAgent": "DESKTOP-40.0.0-10726-MacOSX-10.14.6-Chrome-78.0.3904.108",
    "originalFormat": "com.symphony.messageml.v2"
}
2019-12-12 10:12:33,554 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:12:33,768 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:12:33,974 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "messageSent": {
        "message": {
            "messageId": "SSACciTyu8pKZlLHmfMwfn___pEFVM5bdA",
            "timestamp": 1576163553707,
            "message": "<div data-format=\"PresentationML\" data-version=\"2.0\">                                                 <p>Choose Your Demo:</p>                                                 <br/> <br/>                                                   <form id=\"choose-bot\">                                                     <div style=\"padding-top:1px;\"><button type=\"action\" name=\"kyc\">KYC</button>                                                     <button type=\"action\" name=\"trade-structure\">Trade Builder</button>                                                     <button type=\"action\" name=\"whitesand\">FX Trade Exception</button></div>                                                   </form>                                                 </div>",
            "user": {
                "userId": 349026222348383,
                "displayName": "hydraBot",
                "email": "hydraBot@example.com",
                "username": "hydraBot"
            },
            "stream": {
                "streamId": "4RBWbCSEzY14B9F2RE8FXH___pGaF5k4dA",
                "streamType": "ROOM"
            },
            "externalRecipients": false,
            "userAgent": "Agent-2.55.12-Linux-4.14.143-91.122.amzn1.x86_64",
            "originalFormat": "com.symphony.messageml.v2"
        }
    }
}
2019-12-12 10:12:33,975 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:12:35,025 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "symphonyElementsAction": {
        "actionStream": {
            "streamId": "bx_mCNzrEDv4HJEpui4dRX___pGfkDjVdA"
        },
        "formStream": {
            "streamId": "4RBWbCSEzY14B9F2RE8FXH///pGaF5k4dA=="
        },
        "formMessageId": "SSACciTyu8pKZlLHmfMwfn///pEFVM5bdA==",
        "formId": "choose-bot",
        "formValues": {
            "action": "whitesand"
        }
    }
}
2019-12-12 10:12:35,025 - root - DEBUG - DataFeedEventService/handle_event()
2019-12-12 10:12:35,025 - root - DEBUG - elements_action_handler
2019-12-12 10:12:35,025 - root - DEBUG - StreamClient/stream_info_v2()
2019-12-12 10:12:35,058 - root - DEBUG - action_processor/room_process
2019-12-12 10:12:35,058 - root - DEBUG - {
    "id": "xdcMKr",
    "messageId": "ydvzvrnfZptt4di4QdoAdX___pEFVMnjbQ",
    "timestamp": 1576163554844,
    "type": "SYMPHONYELEMENTSACTION",
    "initiator": {
        "user": {
            "userId": 349026222344902,
            "firstName": "Reed",
            "lastName": "Feldman",
            "displayName": "Reed Feldman (Develop 2)",
            "email": "reed.feldman@symphony.com",
            "username": "reed.feldman@symphony.com"
        }
    },
    "payload": {
        "symphonyElementsAction": {
            "actionStream": {
                "streamId": "bx_mCNzrEDv4HJEpui4dRX___pGfkDjVdA"
            },
            "formStream": {
                "streamId": "4RBWbCSEzY14B9F2RE8FXH///pGaF5k4dA=="
            },
            "formMessageId": "SSACciTyu8pKZlLHmfMwfn///pEFVM5bdA==",
            "formId": "choose-bot",
            "formValues": {
                "action": "whitesand"
            }
        }
    }
}
2019-12-12 10:12:35,058 - root - DEBUG - StreamClient/create_im()
2019-12-12 10:12:35,090 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:12:35,392 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:12:35,598 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "messageSent": {
        "message": {
            "messageId": "S4CJCqrfZHRHJqpL8JM9gn___pEFVMgQdA",
            "timestamp": 1576163555320,
            "message": "<div data-format=\"PresentationML\" data-version=\"2.0\">                                         <h3>Hi! Use hydraBot to keep you up to date on trade status! You can try:</h3>                                             <ul>                                             <li><span class=\"entity\" data-entity-id=\"mention1\">@hydraBot</span> help resolve</li>                                             <li><span class=\"entity\" data-entity-id=\"mention2\">@hydraBot</span> get fx</li>                                             <li><span class=\"entity\" data-entity-id=\"mention3\">@hydraBot</span> get unmatched fx [currency]</li>                                             <li><span class=\"entity\" data-entity-id=\"mention4\">@hydraBot</span> finish</li>                                             </ul>                                     </div>",
            "data": "{\"mention1\":{\"type\":\"com.symphony.user.mention\",\"version\":\"1.0\",\"id\":[{\"type\":\"com.symphony.user.userId\",\"value\":\"349026222348383\"}]},\"mention2\":{\"type\":\"com.symphony.user.mention\",\"version\":\"1.0\",\"id\":[{\"type\":\"com.symphony.user.userId\",\"value\":\"349026222348383\"}]},\"mention3\":{\"type\":\"com.symphony.user.mention\",\"version\":\"1.0\",\"id\":[{\"type\":\"com.symphony.user.userId\",\"value\":\"349026222348383\"}]},\"mention4\":{\"type\":\"com.symphony.user.mention\",\"version\":\"1.0\",\"id\":[{\"type\":\"com.symphony.user.userId\",\"value\":\"349026222348383\"}]}}",
            "user": {
                "userId": 349026222348383,
                "displayName": "hydraBot",
                "email": "hydraBot@example.com",
                "username": "hydraBot"
            },
            "stream": {
                "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
                "streamType": "IM"
            },
            "externalRecipients": false,
            "userAgent": "Agent-2.55.12-Linux-4.14.143-91.122.amzn1.x86_64",
            "originalFormat": "com.symphony.messageml.v2"
        }
    }
}
2019-12-12 10:12:35,598 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:12:43,320 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "messageSent": {
        "message": {
            "messageId": "Y1q4cJw1jf2cLHGHgW7OJH___pEFVKnPbQ",
            "timestamp": 1576163563056,
            "message": "<div data-format=\"PresentationML\" data-version=\"2.0\" class=\"wysiwyg\"><p><span class=\"entity\" data-entity-id=\"0\">@hydraBot</span> get fx</p></div>",
            "data": "{\"0\":{\"id\":[{\"type\":\"com.symphony.user.userId\",\"value\":\"349026222348383\"}],\"type\":\"com.symphony.user.mention\"}}",
            "user": {
                "userId": 349026222344902,
                "firstName": "Reed",
                "lastName": "Feldman",
                "displayName": "Reed Feldman (Develop 2)",
                "email": "reed.feldman@symphony.com",
                "username": "reed.feldman@symphony.com"
            },
            "stream": {
                "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
                "streamType": "IM"
            },
            "externalRecipients": false,
            "userAgent": "DESKTOP-40.0.0-10726-MacOSX-10.14.6-Chrome-78.0.3904.108",
            "originalFormat": "com.symphony.messageml.v2"
        }
    }
}
2019-12-12 10:12:43,321 - root - DEBUG - DataFeedEventService/handle_event()
2019-12-12 10:12:43,321 - root - DEBUG - msg_sent_handler function started
2019-12-12 10:12:43,321 - root - DEBUG - message received in IM
2019-12-12 10:12:43,321 - root - DEBUG - im_processor/process_im_message()
2019-12-12 10:12:43,321 - root - DEBUG - {
    "messageId": "Y1q4cJw1jf2cLHGHgW7OJH___pEFVKnPbQ",
    "timestamp": 1576163563056,
    "message": "<div data-format=\"PresentationML\" data-version=\"2.0\" class=\"wysiwyg\"><p><span class=\"entity\" data-entity-id=\"0\">@hydraBot</span> get fx</p></div>",
    "data": "{\"0\":{\"id\":[{\"type\":\"com.symphony.user.userId\",\"value\":\"349026222348383\"}],\"type\":\"com.symphony.user.mention\"}}",
    "user": {
        "userId": 349026222344902,
        "firstName": "Reed",
        "lastName": "Feldman",
        "displayName": "Reed Feldman (Develop 2)",
        "email": "reed.feldman@symphony.com",
        "username": "reed.feldman@symphony.com"
    },
    "stream": {
        "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
        "streamType": "IM"
    },
    "externalRecipients": false,
    "userAgent": "DESKTOP-40.0.0-10726-MacOSX-10.14.6-Chrome-78.0.3904.108",
    "originalFormat": "com.symphony.messageml.v2"
}
2019-12-12 10:12:43,321 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:12:43,541 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:12:43,884 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:12:44,093 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "messageSent": {
        "message": {
            "messageId": "6CnZqntL1Cp896ke7RWGKX___pEFVKg3dA",
            "timestamp": 1576163563470,
            "message": "<div data-format=\"PresentationML\" data-version=\"2.0\">Here is FX Trade Match Search Results</div>",
            "user": {
                "userId": 349026222348383,
                "displayName": "hydraBot",
                "email": "hydraBot@example.com",
                "username": "hydraBot"
            },
            "stream": {
                "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
                "streamType": "IM"
            },
            "externalRecipients": false,
            "userAgent": "Agent-2.55.12-Linux-4.14.143-91.122.amzn1.x86_64",
            "originalFormat": "com.symphony.messageml.v2"
        }
    }
}
2019-12-12 10:12:44,093 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:12:59,601 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "symphonyElementsAction": {
        "actionStream": {
            "streamId": "bx_mCNzrEDv4HJEpui4dRX___pGfkDjVdA"
        },
        "formStream": {
            "streamId": "d4qgB1L07mpNwSzd+JBJhH///pGf9bEMdA=="
        },
        "formMessageId": "8FNh/lZsK+qiIDQtjw2LQX///pEFVKcUdA==",
        "formId": "fx",
        "formValues": {
            "action": "fix Option_NZD/SGD_64.36759183204 4"
        }
    }
}
2019-12-12 10:12:59,601 - root - DEBUG - DataFeedEventService/handle_event()
2019-12-12 10:12:59,601 - root - DEBUG - elements_action_handler
2019-12-12 10:12:59,601 - root - DEBUG - StreamClient/stream_info_v2()
2019-12-12 10:12:59,724 - root - DEBUG - action_processor/im_process
2019-12-12 10:12:59,724 - root - DEBUG - {
    "id": "MEimvw",
    "messageId": "HgKMk19yiwQWAkxHKCBYr3___pEFVGnqbQ",
    "timestamp": 1576163579413,
    "type": "SYMPHONYELEMENTSACTION",
    "initiator": {
        "user": {
            "userId": 349026222344902,
            "firstName": "Reed",
            "lastName": "Feldman",
            "displayName": "Reed Feldman (Develop 2)",
            "email": "reed.feldman@symphony.com",
            "username": "reed.feldman@symphony.com"
        }
    },
    "payload": {
        "symphonyElementsAction": {
            "actionStream": {
                "streamId": "bx_mCNzrEDv4HJEpui4dRX___pGfkDjVdA"
            },
            "formStream": {
                "streamId": "d4qgB1L07mpNwSzd+JBJhH///pGf9bEMdA=="
            },
            "formMessageId": "8FNh/lZsK+qiIDQtjw2LQX///pEFVKcUdA==",
            "formId": "fx",
            "formValues": {
                "action": "fix Option_NZD/SGD_64.36759183204 4"
            }
        }
    }
}
2019-12-12 10:12:59,724 - root - DEBUG - StreamClient/create_room()
2019-12-12 10:12:59,821 - root - DEBUG - StreamClient/add_member_to_room()
2019-12-12 10:12:59,958 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:13:00,457 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:13:00,787 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:13:00,996 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "roomCreated": {
        "stream": {
            "streamId": "DJo9WBONLBhKMo9MtiRc1X___pEFVGicdA",
            "streamType": "ROOM",
            "roomName": "Option_NZD/SGD_64.36759183204",
            "external": false,
            "crossPod": false
        },
        "roomProperties": {
            "name": "Option_NZD/SGD_64.36759183204",
            "description": "Option_NZD/SGD_64.36759183204",
            "creatorUser": {
                "userId": 349026222348383,
                "displayName": "hydraBot",
                "email": "hydraBot@example.com",
                "username": "hydraBot"
            },
            "createdDate": 1576163579747,
            "external": false,
            "crossPod": false,
            "copyProtected": false,
            "readOnly": false,
            "discoverable": false,
            "membersCanInvite": false,
            "canViewHistory": false,
            "public": false
        }
    }
}
2019-12-12 10:13:00,996 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:13:04,316 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "symphonyElementsAction": {
        "actionStream": {
            "streamId": "bx_mCNzrEDv4HJEpui4dRX___pGfkDjVdA"
        },
        "formStream": {
            "streamId": "d4qgB1L07mpNwSzd+JBJhH///pGf9bEMdA=="
        },
        "formMessageId": "pZRZZ/g9Fl/dF93UFUWt93///pEFVGTwdA==",
        "formId": "fx",
        "formValues": {
            "action": "fix Swap_USD/EUR_14.08856955263 5"
        }
    }
}
2019-12-12 10:13:04,316 - root - DEBUG - DataFeedEventService/handle_event()
2019-12-12 10:13:04,316 - root - DEBUG - elements_action_handler
2019-12-12 10:13:04,316 - root - DEBUG - StreamClient/stream_info_v2()
2019-12-12 10:13:04,348 - root - DEBUG - action_processor/im_process
2019-12-12 10:13:04,348 - root - DEBUG - {
    "id": "hxfzN0",
    "messageId": "ukcMSNr5QfxzQIxt_3myN3___pEFVFeFbQ",
    "timestamp": 1576163584122,
    "type": "SYMPHONYELEMENTSACTION",
    "initiator": {
        "user": {
            "userId": 349026222344902,
            "firstName": "Reed",
            "lastName": "Feldman",
            "displayName": "Reed Feldman (Develop 2)",
            "email": "reed.feldman@symphony.com",
            "username": "reed.feldman@symphony.com"
        }
    },
    "payload": {
        "symphonyElementsAction": {
            "actionStream": {
                "streamId": "bx_mCNzrEDv4HJEpui4dRX___pGfkDjVdA"
            },
            "formStream": {
                "streamId": "d4qgB1L07mpNwSzd+JBJhH///pGf9bEMdA=="
            },
            "formMessageId": "pZRZZ/g9Fl/dF93UFUWt93///pEFVGTwdA==",
            "formId": "fx",
            "formValues": {
                "action": "fix Swap_USD/EUR_14.08856955263 5"
            }
        }
    }
}
2019-12-12 10:13:04,348 - root - DEBUG - StreamClient/create_room()
2019-12-12 10:13:04,424 - root - DEBUG - StreamClient/add_member_to_room()
2019-12-12 10:13:04,624 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:13:05,137 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:13:05,417 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:13:05,628 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "roomCreated": {
        "stream": {
            "streamId": "ks-YGNM6qby8_EU6iawyt3___pEFVFaRdA",
            "streamType": "ROOM",
            "roomName": "Swap_USD/EUR_14.08856955263",
            "external": false,
            "crossPod": false
        },
        "roomProperties": {
            "name": "Swap_USD/EUR_14.08856955263",
            "description": "Swap_USD/EUR_14.08856955263",
            "creatorUser": {
                "userId": 349026222348383,
                "displayName": "hydraBot",
                "email": "hydraBot@example.com",
                "username": "hydraBot"
            },
            "createdDate": 1576163584366,
            "external": false,
            "crossPod": false,
            "copyProtected": false,
            "readOnly": false,
            "discoverable": false,
            "membersCanInvite": false,
            "canViewHistory": false,
            "public": false
        }
    }
}
2019-12-12 10:13:05,628 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:13:06,828 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "symphonyElementsAction": {
        "actionStream": {
            "streamId": "bx_mCNzrEDv4HJEpui4dRX___pGfkDjVdA"
        },
        "formStream": {
            "streamId": "d4qgB1L07mpNwSzd+JBJhH///pGf9bEMdA=="
        },
        "formMessageId": "C67pqAQhTfXXJhTOKcCJTn///pEFVFLcdA==",
        "formId": "fx",
        "formValues": {
            "action": "fix Swap_COP/DKK_40.90657112608 6"
        }
    }
}
2019-12-12 10:13:06,828 - root - DEBUG - DataFeedEventService/handle_event()
2019-12-12 10:13:06,828 - root - DEBUG - elements_action_handler
2019-12-12 10:13:06,828 - root - DEBUG - StreamClient/stream_info_v2()
2019-12-12 10:13:06,858 - root - DEBUG - action_processor/im_process
2019-12-12 10:13:06,858 - root - DEBUG - {
    "id": "kjazXG",
    "messageId": "n5-ywzkzahzkv_GPQjXX_n___pEFVE3UbQ",
    "timestamp": 1576163586603,
    "type": "SYMPHONYELEMENTSACTION",
    "initiator": {
        "user": {
            "userId": 349026222344902,
            "firstName": "Reed",
            "lastName": "Feldman",
            "displayName": "Reed Feldman (Develop 2)",
            "email": "reed.feldman@symphony.com",
            "username": "reed.feldman@symphony.com"
        }
    },
    "payload": {
        "symphonyElementsAction": {
            "actionStream": {
                "streamId": "bx_mCNzrEDv4HJEpui4dRX___pGfkDjVdA"
            },
            "formStream": {
                "streamId": "d4qgB1L07mpNwSzd+JBJhH///pGf9bEMdA=="
            },
            "formMessageId": "C67pqAQhTfXXJhTOKcCJTn///pEFVFLcdA==",
            "formId": "fx",
            "formValues": {
                "action": "fix Swap_COP/DKK_40.90657112608 6"
            }
        }
    }
}
2019-12-12 10:13:06,858 - root - DEBUG - StreamClient/create_room()
2019-12-12 10:13:06,956 - root - DEBUG - StreamClient/add_member_to_room()
2019-12-12 10:13:07,078 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:13:07,761 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:13:08,070 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:13:08,285 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "roomCreated": {
        "stream": {
            "streamId": "WButKR8XcsdS3cPcuImnKn___pEFVEzEdA",
            "streamType": "ROOM",
            "roomName": "Swap_COP/DKK_40.90657112608",
            "external": false,
            "crossPod": false
        },
        "roomProperties": {
            "name": "Swap_COP/DKK_40.90657112608",
            "description": "Swap_COP/DKK_40.90657112608",
            "creatorUser": {
                "userId": 349026222348383,
                "displayName": "hydraBot",
                "email": "hydraBot@example.com",
                "username": "hydraBot"
            },
            "createdDate": 1576163586876,
            "external": false,
            "crossPod": false,
            "copyProtected": false,
            "readOnly": false,
            "discoverable": false,
            "membersCanInvite": false,
            "canViewHistory": false,
            "public": false
        }
    }
}
2019-12-12 10:13:08,285 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:13:38,490 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:13:38,490 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:14:08,726 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:14:08,726 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:14:29,587 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "messageSent": {
        "message": {
            "messageId": "f3a3H7H34GpBId6JHYubCn___pEFUwqlbQ",
            "timestamp": 1576163669338,
            "message": "<div data-format=\"PresentationML\" data-version=\"2.0\" class=\"wysiwyg\"><p><span class=\"entity\" data-entity-id=\"0\">@hydraBot</span> get unmatched fx JPY</p></div>",
            "data": "{\"0\":{\"id\":[{\"type\":\"com.symphony.user.userId\",\"value\":\"349026222348383\"}],\"type\":\"com.symphony.user.mention\"}}",
            "user": {
                "userId": 349026222344902,
                "firstName": "Reed",
                "lastName": "Feldman",
                "displayName": "Reed Feldman (Develop 2)",
                "email": "reed.feldman@symphony.com",
                "username": "reed.feldman@symphony.com"
            },
            "stream": {
                "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
                "streamType": "IM"
            },
            "externalRecipients": false,
            "userAgent": "DESKTOP-40.0.0-10726-MacOSX-10.14.6-Chrome-78.0.3904.108",
            "originalFormat": "com.symphony.messageml.v2"
        }
    }
}
2019-12-12 10:14:29,587 - root - DEBUG - DataFeedEventService/handle_event()
2019-12-12 10:14:29,587 - root - DEBUG - msg_sent_handler function started
2019-12-12 10:14:29,587 - root - DEBUG - message received in IM
2019-12-12 10:14:29,587 - root - DEBUG - im_processor/process_im_message()
2019-12-12 10:14:29,587 - root - DEBUG - {
    "messageId": "f3a3H7H34GpBId6JHYubCn___pEFUwqlbQ",
    "timestamp": 1576163669338,
    "message": "<div data-format=\"PresentationML\" data-version=\"2.0\" class=\"wysiwyg\"><p><span class=\"entity\" data-entity-id=\"0\">@hydraBot</span> get unmatched fx JPY</p></div>",
    "data": "{\"0\":{\"id\":[{\"type\":\"com.symphony.user.userId\",\"value\":\"349026222348383\"}],\"type\":\"com.symphony.user.mention\"}}",
    "user": {
        "userId": 349026222344902,
        "firstName": "Reed",
        "lastName": "Feldman",
        "displayName": "Reed Feldman (Develop 2)",
        "email": "reed.feldman@symphony.com",
        "username": "reed.feldman@symphony.com"
    },
    "stream": {
        "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
        "streamType": "IM"
    },
    "externalRecipients": false,
    "userAgent": "DESKTOP-40.0.0-10726-MacOSX-10.14.6-Chrome-78.0.3904.108",
    "originalFormat": "com.symphony.messageml.v2"
}
2019-12-12 10:14:29,588 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:14:29,803 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:14:30,259 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:14:30,468 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "messageSent": {
        "message": {
            "messageId": "_UNkUi_Py7wPUN1EdY2MdH___pEFUwkbdA",
            "timestamp": 1576163669737,
            "message": "<div data-format=\"PresentationML\" data-version=\"2.0\">Here is FX Trade Match Search Results</div>",
            "user": {
                "userId": 349026222348383,
                "displayName": "hydraBot",
                "email": "hydraBot@example.com",
                "username": "hydraBot"
            },
            "stream": {
                "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
                "streamType": "IM"
            },
            "externalRecipients": false,
            "userAgent": "Agent-2.55.12-Linux-4.14.143-91.122.amzn1.x86_64",
            "originalFormat": "com.symphony.messageml.v2"
        }
    }
}
2019-12-12 10:14:30,468 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:15:00,678 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:15:00,678 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:15:10,882 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "symphonyElementsAction": {
        "actionStream": {
            "streamId": "bx_mCNzrEDv4HJEpui4dRX___pGfkDjVdA"
        },
        "formStream": {
            "streamId": "d4qgB1L07mpNwSzd+JBJhH///pGf9bEMdA=="
        },
        "formMessageId": "eo1qrmAyjIB3zbEcoOeWyX///pEFUwd8dA==",
        "formId": "fx",
        "formValues": {
            "action": "jpy Option_JPY/NZD_84.99519916238 1"
        }
    }
}
2019-12-12 10:15:10,882 - root - DEBUG - DataFeedEventService/handle_event()
2019-12-12 10:15:10,882 - root - DEBUG - elements_action_handler
2019-12-12 10:15:10,882 - root - DEBUG - StreamClient/stream_info_v2()
2019-12-12 10:15:11,003 - root - DEBUG - action_processor/im_process
2019-12-12 10:15:11,003 - root - DEBUG - {
    "id": "ipCiYE",
    "messageId": "YHti9jR2E9CtNfVmwzOuP3___pEFUmlXbQ",
    "timestamp": 1576163710632,
    "type": "SYMPHONYELEMENTSACTION",
    "initiator": {
        "user": {
            "userId": 349026222344902,
            "firstName": "Reed",
            "lastName": "Feldman",
            "displayName": "Reed Feldman (Develop 2)",
            "email": "reed.feldman@symphony.com",
            "username": "reed.feldman@symphony.com"
        }
    },
    "payload": {
        "symphonyElementsAction": {
            "actionStream": {
                "streamId": "bx_mCNzrEDv4HJEpui4dRX___pGfkDjVdA"
            },
            "formStream": {
                "streamId": "d4qgB1L07mpNwSzd+JBJhH///pGf9bEMdA=="
            },
            "formMessageId": "eo1qrmAyjIB3zbEcoOeWyX///pEFUwd8dA==",
            "formId": "fx",
            "formValues": {
                "action": "jpy Option_JPY/NZD_84.99519916238 1"
            }
        }
    }
}
2019-12-12 10:15:11,003 - root - DEBUG - StreamClient/create_room()
2019-12-12 10:15:11,220 - root - DEBUG - StreamClient/add_member_to_room()
2019-12-12 10:15:11,381 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:15:12,115 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:15:12,563 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:15:12,741 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "roomCreated": {
        "stream": {
            "streamId": "Dz6LsJZYkuLqmnHRyXBQTX___pEFUmfQdA",
            "streamType": "ROOM",
            "roomName": "Option_JPY/NZD_84.99519916238",
            "external": false,
            "crossPod": false
        },
        "roomProperties": {
            "name": "Option_JPY/NZD_84.99519916238",
            "description": "Option_JPY/NZD_84.99519916238",
            "creatorUser": {
                "userId": 349026222348383,
                "displayName": "hydraBot",
                "email": "hydraBot@example.com",
                "username": "hydraBot"
            },
            "createdDate": 1576163711024,
            "external": false,
            "crossPod": false,
            "copyProtected": false,
            "readOnly": false,
            "discoverable": false,
            "membersCanInvite": false,
            "canViewHistory": false,
            "public": false
        }
    }
}
2019-12-12 10:15:12,741 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:15:13,191 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "messageSent": {
        "message": {
            "messageId": "oIYZ3LKp6YqPInKEEl7CvX___pEFUmKpdA",
            "timestamp": 1576163712368,
            "message": "<div data-format=\"PresentationML\" data-version=\"2.0\">   <br/>     <form id=\"fx\">       <table>         <thead>           <tr>             <td>Product</td>             <td>Deal</td>             <td>Trade Date</td>             <td>Value Date</td>             <td>Maturity Date</td>             <td>CCY1</td>             <td>Quanity 1</td>             <td>CCY2</td>             <td>Quanity 2</td>             <td>Clearing Status Action</td>             <td>Local market Value</td>           </tr>         </thead>         <tbody>           <tr>             <td>Option JPY/NZD 84.99519916238</td>             <td>190101435</td>             <td>3-Oct-2018</td>             <td>4-Dec-2018</td>             <td>2-Dec-2018</td>             <td>JPY</td>             <td>98,298,082</td>             <td>NZD</td>             <td>78,636,246</td>             <td><b>Unmatched</b></td>             <td><button type=\"action\" name=\"jpy Option_JPY/NZD_84.99519916238 1\">Fix it</button></td>           </tr>           <tr>             <td>Option EUR/JPY 130.4037807416</td>             <td>475229187</td>             <td>3-Oct-2018</td>             <td>9-Nov-2018</td>             <td>7-Nov-2018</td>             <td>EUR</td>             <td>17,745,036</td>             <td>JPY</td>             <td>2,568,303</td>             <td><b>Unmatched</b></td>             <td><button type=\"action\" name=\"jpy Option_EUR/JPY_130.4037807416 2\">Fix it</button></td>           </tr>           <tr>             <td>Option JPY/NOK 69.57399284877</td>             <td>72256805</td>             <td>3-Oct-2018</td>             <td>25-Nov-2018</td>             <td>23-Nov-2018</td>             <td>JPY</td>             <td>86,561,432</td>             <td>NOK</td>             <td>68,076,012</td>             <td><b>Unmatched</b></td>             <td><button type=\"action\" name=\"jpy Option_JPY/NOK_69.57399284877 3\">Fix it</button></td>           </tr>           <tr>             <td>Option JPY/CNH 18.89369602456</td>             <td>525064675</td>             <td>3-Oct-2018</td>             <td>1-Nov-2018</td>             <td>30-Oct-2018</td>             <td>JPY</td>             <td>39,858,991</td>             <td>CNH</td>             <td>94,486,804</td>             <td><b>Unmatched</b></td>             <td><button type=\"action\" name=\"jpy Option_JPY/CNH_18.89369602456 4\">Fix it</button></td>           </tr>           <tr>             <td>Option ILS/JPY 126.24856128692</td>             <td>179742585</td>             <td>3-Oct-2018</td>             <td>26-Nov-2018</td>             <td>24-Nov-2018</td>             <td>ILS</td>             <td>18,825,216</td>             <td>JPY</td>             <td>70,399,501</td>             <td><b>Unmatched</b></td>             <td><button type=\"action\" name=\"jpy Option_ILS/JPY_126.24856128692 5\">Fix it</button></td>           </tr>           <tr>             <td>Option JPY/NOK 72.40775271464</td>             <td>241235371</td>             <td>3-Oct-2018</td>             <td>26-Oct-2018</td>             <td>24-Oct-2018</td>             <td>JPY</td>             <td>17,413,365</td>             <td>NOK</td>             <td>7,007,251</td>             <td><b>Unmatched</b></td>             <td><button type=\"action\" name=\"jpy Option_JPY/NOK_72.40775271464 6\">Fix it</button></td>           </tr>           <tr>             <td>Option AUD/JPY 97.54233692074</td>             <td>579527845</td>             <td>3-Oct-2018</td>             <td>25-Nov-2018</td>             <td>23-Nov-2018</td>             <td>AUD</td>             <td>60,903,883</td>             <td>JPY</td>             <td>53,264,495</td>             <td><b>Unmatched</b></td>             <td><button type=\"action\" name=\"jpy Option_AUD/JPY_97.54233692074 7\">Fix it</button></td>           </tr>           <tr>             <td>Spot TWD/JPY 68.18380111227</td>             <td>144021745</td>             <td>3-Oct-2018</td>             <td>19-Nov-2018</td>             <td>17-Nov-2018</td>             <td>TWD</td>             <td>19,636,812</td>             <td>JPY</td>             <td>73,539,984</td>             <td><b>Unmatched</b></td>             <td><button type=\"action\" name=\"jpy Spot_TWD/JPY_68.18380111227 8\">Fix it</button></td>           </tr>           <tr>             <td>Option JPY/ARS 187.85642805777</td>             <td>285438021</td>             <td>3-Oct-2018</td>             <td>3-Dec-2018</td>             <td>1-Dec-2018</td>             <td>JPY</td>             <td>87,995,004</td>             <td>ARS</td>             <td>89,554,898</td>             <td><b>Unmatched</b></td>             <td><button type=\"action\" name=\"jpy Option_JPY/ARS_187.85642805777 9\">Fix it</button></td>           </tr>           <tr>             <td>Swap BRL/JPY 151.27258008029</td>             <td>136665409</td>             <td>3-Oct-2018</td>             <td>5-Nov-2018</td>             <td>3-Nov-2018</td>             <td>BRL</td>             <td>59,244,148</td>             <td>JPY</td>             <td>97,738,670</td>             <td><b>Unmatched</b></td>             <td><button type=\"action\" name=\"jpy Swap_BRL/JPY_151.27258008029 10\">Fix it</button></td>           </tr>         </tbody>       </table>     </form> </div>",
            "user": {
                "userId": 349026222348383,
                "displayName": "hydraBot",
                "email": "hydraBot@example.com",
                "username": "hydraBot"
            },
            "stream": {
                "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
                "streamType": "IM"
            },
            "externalRecipients": false,
            "userAgent": "Agent-2.55.12-Linux-4.14.143-91.122.amzn1.x86_64",
            "originalFormat": "com.symphony.messageml.v2"
        }
    }
}
2019-12-12 10:15:13,191 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:15:14,323 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "symphonyElementsAction": {
        "actionStream": {
            "streamId": "bx_mCNzrEDv4HJEpui4dRX___pGfkDjVdA"
        },
        "formStream": {
            "streamId": "d4qgB1L07mpNwSzd+JBJhH///pGf9bEMdA=="
        },
        "formMessageId": "oIYZ3LKp6YqPInKEEl7CvX///pEFUmKpdA==",
        "formId": "fx",
        "formValues": {
            "action": "jpy Option_ILS/JPY_126.24856128692 5"
        }
    }
}
2019-12-12 10:15:14,323 - root - DEBUG - DataFeedEventService/handle_event()
2019-12-12 10:15:14,323 - root - DEBUG - elements_action_handler
2019-12-12 10:15:14,323 - root - DEBUG - StreamClient/stream_info_v2()
2019-12-12 10:15:14,351 - root - DEBUG - action_processor/im_process
2019-12-12 10:15:14,351 - root - DEBUG - {
    "id": "Z20VTY",
    "messageId": "492-M3RzdP1hGs-bvJA5XX___pEFUlvZbQ",
    "timestamp": 1576163714086,
    "type": "SYMPHONYELEMENTSACTION",
    "initiator": {
        "user": {
            "userId": 349026222344902,
            "firstName": "Reed",
            "lastName": "Feldman",
            "displayName": "Reed Feldman (Develop 2)",
            "email": "reed.feldman@symphony.com",
            "username": "reed.feldman@symphony.com"
        }
    },
    "payload": {
        "symphonyElementsAction": {
            "actionStream": {
                "streamId": "bx_mCNzrEDv4HJEpui4dRX___pGfkDjVdA"
            },
            "formStream": {
                "streamId": "d4qgB1L07mpNwSzd+JBJhH///pGf9bEMdA=="
            },
            "formMessageId": "oIYZ3LKp6YqPInKEEl7CvX///pEFUmKpdA==",
            "formId": "fx",
            "formValues": {
                "action": "jpy Option_ILS/JPY_126.24856128692 5"
            }
        }
    }
}
2019-12-12 10:15:14,351 - root - DEBUG - StreamClient/create_room()
2019-12-12 10:15:14,444 - root - DEBUG - StreamClient/add_member_to_room()
2019-12-12 10:15:14,631 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:15:15,237 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:15:15,701 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:15:15,871 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "roomCreated": {
        "stream": {
            "streamId": "SC5xfGz_hHcQTjCNm67ZGn___pEFUlq9dA",
            "streamType": "ROOM",
            "roomName": "Option_ILS/JPY_126.24856128692",
            "external": false,
            "crossPod": false
        },
        "roomProperties": {
            "name": "Option_ILS/JPY_126.24856128692",
            "description": "Option_ILS/JPY_126.24856128692",
            "creatorUser": {
                "userId": 349026222348383,
                "displayName": "hydraBot",
                "email": "hydraBot@example.com",
                "username": "hydraBot"
            },
            "createdDate": 1576163714371,
            "external": false,
            "crossPod": false,
            "copyProtected": false,
            "readOnly": false,
            "discoverable": false,
            "membersCanInvite": false,
            "canViewHistory": false,
            "public": false
        }
    }
}
2019-12-12 10:15:15,871 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:15:16,616 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "symphonyElementsAction": {
        "actionStream": {
            "streamId": "bx_mCNzrEDv4HJEpui4dRX___pGfkDjVdA"
        },
        "formStream": {
            "streamId": "d4qgB1L07mpNwSzd+JBJhH///pGf9bEMdA=="
        },
        "formMessageId": "jX98qw9GSKuS7RA3afMIWn///pEFUlYgdA==",
        "formId": "fx",
        "formValues": {
            "action": "jpy Option_JPY/ARS_187.85642805777 9"
        }
    }
}
2019-12-12 10:15:16,616 - root - DEBUG - DataFeedEventService/handle_event()
2019-12-12 10:15:16,616 - root - DEBUG - elements_action_handler
2019-12-12 10:15:16,616 - root - DEBUG - StreamClient/stream_info_v2()
2019-12-12 10:15:16,645 - root - DEBUG - action_processor/im_process
2019-12-12 10:15:16,646 - root - DEBUG - {
    "id": "rdIipe",
    "messageId": "vilc04DMsoJDYMZxjFUVvH___pEFUlLjbQ",
    "timestamp": 1576163716380,
    "type": "SYMPHONYELEMENTSACTION",
    "initiator": {
        "user": {
            "userId": 349026222344902,
            "firstName": "Reed",
            "lastName": "Feldman",
            "displayName": "Reed Feldman (Develop 2)",
            "email": "reed.feldman@symphony.com",
            "username": "reed.feldman@symphony.com"
        }
    },
    "payload": {
        "symphonyElementsAction": {
            "actionStream": {
                "streamId": "bx_mCNzrEDv4HJEpui4dRX___pGfkDjVdA"
            },
            "formStream": {
                "streamId": "d4qgB1L07mpNwSzd+JBJhH///pGf9bEMdA=="
            },
            "formMessageId": "jX98qw9GSKuS7RA3afMIWn///pEFUlYgdA==",
            "formId": "fx",
            "formValues": {
                "action": "jpy Option_JPY/ARS_187.85642805777 9"
            }
        }
    }
}
2019-12-12 10:15:16,646 - root - DEBUG - StreamClient/create_room()
2019-12-12 10:15:16,757 - root - DEBUG - StreamClient/add_member_to_room()
2019-12-12 10:15:16,966 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:15:17,444 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:15:17,743 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:15:17,959 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "roomCreated": {
        "stream": {
            "streamId": "o-ElfVfRgG51rQYqCd15nH___pEFUlHFdA",
            "streamType": "ROOM",
            "roomName": "Option_JPY/ARS_187.85642805777",
            "external": false,
            "crossPod": false
        },
        "roomProperties": {
            "name": "Option_JPY/ARS_187.85642805777",
            "description": "Option_JPY/ARS_187.85642805777",
            "creatorUser": {
                "userId": 349026222348383,
                "displayName": "hydraBot",
                "email": "hydraBot@example.com",
                "username": "hydraBot"
            },
            "createdDate": 1576163716667,
            "external": false,
            "crossPod": false,
            "copyProtected": false,
            "readOnly": false,
            "discoverable": false,
            "membersCanInvite": false,
            "canViewHistory": false,
            "public": false
        }
    }
}
2019-12-12 10:15:17,959 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:15:29,418 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "messageSent": {
        "message": {
            "messageId": "nHeEv-GuWMiMkcgO9eWPGn___pEFUiEFbQ",
            "timestamp": 1576163729146,
            "message": "<div data-format=\"PresentationML\" data-version=\"2.0\" class=\"wysiwyg\"><p><span class=\"entity\" data-entity-id=\"0\">@hydraBot</span> clear</p></div>",
            "data": "{\"0\":{\"id\":[{\"type\":\"com.symphony.user.userId\",\"value\":\"349026222348383\"}],\"type\":\"com.symphony.user.mention\"}}",
            "user": {
                "userId": 349026222344902,
                "firstName": "Reed",
                "lastName": "Feldman",
                "displayName": "Reed Feldman (Develop 2)",
                "email": "reed.feldman@symphony.com",
                "username": "reed.feldman@symphony.com"
            },
            "stream": {
                "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
                "streamType": "IM"
            },
            "externalRecipients": false,
            "userAgent": "DESKTOP-40.0.0-10726-MacOSX-10.14.6-Chrome-78.0.3904.108",
            "originalFormat": "com.symphony.messageml.v2"
        }
    }
}
2019-12-12 10:15:29,418 - root - DEBUG - DataFeedEventService/handle_event()
2019-12-12 10:15:29,418 - root - DEBUG - msg_sent_handler function started
2019-12-12 10:15:29,418 - root - DEBUG - message received in IM
2019-12-12 10:15:29,418 - root - DEBUG - im_processor/process_im_message()
2019-12-12 10:15:29,418 - root - DEBUG - {
    "messageId": "nHeEv-GuWMiMkcgO9eWPGn___pEFUiEFbQ",
    "timestamp": 1576163729146,
    "message": "<div data-format=\"PresentationML\" data-version=\"2.0\" class=\"wysiwyg\"><p><span class=\"entity\" data-entity-id=\"0\">@hydraBot</span> clear</p></div>",
    "data": "{\"0\":{\"id\":[{\"type\":\"com.symphony.user.userId\",\"value\":\"349026222348383\"}],\"type\":\"com.symphony.user.mention\"}}",
    "user": {
        "userId": 349026222344902,
        "firstName": "Reed",
        "lastName": "Feldman",
        "displayName": "Reed Feldman (Develop 2)",
        "email": "reed.feldman@symphony.com",
        "username": "reed.feldman@symphony.com"
    },
    "stream": {
        "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
        "streamType": "IM"
    },
    "externalRecipients": false,
    "userAgent": "DESKTOP-40.0.0-10726-MacOSX-10.14.6-Chrome-78.0.3904.108",
    "originalFormat": "com.symphony.messageml.v2"
}
2019-12-12 10:15:29,418 - root - DEBUG - MessageClient/send_msg()
2019-12-12 10:15:29,637 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:15:29,847 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "messageSent": {
        "message": {
            "messageId": "51c7fiNanP23oCcUdIXawH___pEFUh9jdA",
            "timestamp": 1576163729569,
            "message": "<div data-format=\"PresentationML\" data-version=\"2.0\">                                         <br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>                                       </div>",
            "user": {
                "userId": 349026222348383,
                "displayName": "hydraBot",
                "email": "hydraBot@example.com",
                "username": "hydraBot"
            },
            "stream": {
                "streamId": "d4qgB1L07mpNwSzd-JBJhH___pGf9bEMdA",
                "streamType": "IM"
            },
            "externalRecipients": false,
            "userAgent": "Agent-2.55.12-Linux-4.14.143-91.122.amzn1.x86_64",
            "originalFormat": "com.symphony.messageml.v2"
        }
    }
}
2019-12-12 10:15:29,847 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:15:57,924 - root - DEBUG - DataFeedEventService/read_datafeed() --> Incoming data from read_datafeed(): {
    "userJoinedRoom": {
        "stream": {
            "streamId": "4RBWbCSEzY14B9F2RE8FXH___pGaF5k4dA",
            "streamType": "ROOM",
            "roomName": "sales-bot-demo-room",
            "external": false,
            "crossPod": false
        },
        "affectedUser": {
            "userId": 349026222342171,
            "firstName": "Gordon",
            "lastName": "Cabaniss",
            "displayName": "Gordon Cabaniss  (developer2)",
            "email": "gordon.cabaniss@symphony.com",
            "username": "gordon.cabaniss@symphony.com"
        }
    }
}
2019-12-12 10:15:57,924 - root - DEBUG - DataFeedEventService/handle_event()
2019-12-12 10:15:57,924 - root - DEBUG - user_joined_room_handler
2019-12-12 10:15:57,924 - root - DEBUG - USER JOINED ROOM
2019-12-12 10:15:57,924 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:16:28,200 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:16:28,200 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:16:58,413 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:16:58,414 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:17:28,711 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:17:28,711 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:17:58,920 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:17:58,920 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:18:29,167 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:18:29,167 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:18:59,326 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:18:59,326 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:19:29,549 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:19:29,549 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:19:59,751 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:19:59,752 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:20:29,957 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:20:29,957 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:21:00,166 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:21:00,166 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:21:30,478 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:21:30,478 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:22:00,647 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:22:00,647 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:22:30,996 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:22:30,996 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:23:01,172 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:23:01,172 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:23:31,412 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:23:31,412 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:24:01,586 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:24:01,586 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:24:31,768 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:24:31,768 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:25:02,037 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:25:02,037 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:25:32,325 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:25:32,326 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:26:02,485 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:26:02,485 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:26:32,760 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:26:32,761 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:27:02,969 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:27:02,969 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:27:33,187 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:27:33,188 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:28:03,358 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:28:03,358 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:28:33,537 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:28:33,537 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:29:03,701 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:29:03,702 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:29:33,903 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:29:33,903 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:30:04,172 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:30:04,172 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:30:34,371 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:30:34,372 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:31:04,653 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:31:04,653 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:31:35,192 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:31:35,192 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:32:05,561 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:32:05,561 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:32:35,780 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:32:35,780 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:33:05,980 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:33:05,980 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:33:36,184 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:33:36,185 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:34:06,356 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:34:06,356 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:34:36,605 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:34:36,605 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:35:06,815 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:35:06,815 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:35:36,994 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:35:36,994 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:36:07,230 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:36:07,230 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:36:37,436 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:36:37,436 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:37:07,641 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:37:07,641 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:37:37,864 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:37:37,864 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:38:08,063 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:38:08,063 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:38:38,242 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:38:38,242 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:39:08,473 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:39:08,473 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:39:38,784 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:39:38,785 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:40:08,978 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:40:08,978 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:40:39,177 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:40:39,177 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:41:09,458 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:41:09,459 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:41:39,641 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:41:39,641 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:42:09,921 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:42:09,921 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:42:40,245 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:42:40,246 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:43:10,456 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:43:10,457 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:43:40,664 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:43:40,664 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:44:10,872 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:44:10,873 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:44:41,080 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:44:41,081 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:45:11,389 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:45:11,390 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:45:41,601 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:45:41,601 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:46:11,806 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:46:11,806 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:46:42,015 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:46:42,015 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:47:12,225 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:47:12,225 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:47:42,454 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:47:42,454 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:48:12,614 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:48:12,614 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:48:42,845 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:48:42,845 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:49:13,005 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:49:13,005 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:49:43,267 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:49:43,268 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:50:13,575 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:50:13,576 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:50:43,884 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:50:43,884 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:51:14,046 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:51:14,047 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:51:44,308 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:51:44,308 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:52:14,467 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:52:14,467 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:52:44,820 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:52:44,820 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:53:15,027 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:53:15,027 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:53:45,240 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:53:45,240 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:54:15,398 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:54:15,398 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:54:45,590 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:54:45,590 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:55:15,859 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:55:15,859 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:55:46,091 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:55:46,091 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:56:16,256 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:56:16,256 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:56:46,581 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:56:46,581 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:57:16,797 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:57:16,797 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:57:47,209 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:57:47,209 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:58:17,420 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:58:17,420 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:58:47,726 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:58:47,726 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:59:17,936 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:59:17,936 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 10:59:48,127 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 10:59:48,127 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:00:18,320 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:00:18,320 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:00:48,565 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:00:48,566 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:01:18,749 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:01:18,749 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:01:48,977 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:01:48,977 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:02:19,136 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:02:19,136 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:02:49,433 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:02:49,434 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:03:19,595 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:03:19,595 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:03:49,799 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:03:49,799 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:04:20,018 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:04:20,019 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:04:50,224 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:04:50,226 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:05:20,518 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:05:20,518 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:05:50,847 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:05:50,847 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:06:21,160 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:06:21,160 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:06:51,371 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:06:51,372 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:07:21,680 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:07:21,680 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:07:51,992 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:07:51,992 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:08:22,150 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:08:22,150 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:08:52,404 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:08:52,404 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:09:22,612 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:09:22,612 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:09:52,814 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:09:52,814 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:10:23,004 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:10:23,004 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:10:53,237 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:10:53,238 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:11:23,443 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:11:23,443 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:11:53,672 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:11:53,672 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:12:23,863 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:12:23,863 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:12:54,183 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:12:54,183 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:13:24,482 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:13:24,482 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:13:54,690 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:13:54,690 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:14:25,001 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:14:25,001 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:14:55,312 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:14:55,312 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:15:25,801 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:15:25,801 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:15:56,056 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:15:56,057 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:16:26,262 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:16:26,262 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:16:56,452 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:16:56,452 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:17:26,631 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:17:26,631 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:17:56,866 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:17:56,866 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:18:27,076 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:18:27,076 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:18:57,358 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:18:57,358 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:19:27,591 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:19:27,591 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:19:57,822 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:19:57,822 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:20:28,113 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:20:28,113 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:20:58,337 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:20:58,337 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:21:28,627 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:21:28,627 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:21:58,858 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:21:58,858 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:22:29,122 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:22:29,122 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:22:59,538 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:22:59,539 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:23:29,711 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:23:29,711 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:23:59,890 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:23:59,890 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:24:30,082 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:24:30,082 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:25:00,291 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:25:00,291 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:25:30,602 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:25:30,603 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:26:00,784 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:26:00,784 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:26:30,942 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:26:30,942 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:27:01,125 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:27:01,125 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:27:31,284 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:27:31,284 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:28:01,559 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:28:01,559 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:28:31,957 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:28:31,957 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:29:02,372 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:29:02,372 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:29:32,532 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:29:32,532 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:30:02,781 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:30:02,781 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:30:32,999 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:30:32,999 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:31:03,198 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:31:03,198 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:31:33,365 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:31:33,365 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:32:03,546 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:32:03,546 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:32:33,818 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:32:33,818 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:33:04,133 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:33:04,133 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:33:34,701 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:33:34,701 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:34:04,895 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:34:04,895 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:34:35,064 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:34:35,064 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:35:05,424 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:35:05,424 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:35:35,767 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:35:35,767 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:36:06,248 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:36:06,248 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:36:36,699 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:36:36,699 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:37:06,924 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:37:06,924 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:37:37,105 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:37:37,105 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:38:07,318 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:38:07,318 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:38:37,480 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:38:37,480 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:39:07,674 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:39:07,674 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:39:37,864 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:39:37,864 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:40:08,071 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:40:08,071 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:40:38,275 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:40:38,275 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:41:08,502 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:41:08,502 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:41:38,661 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:41:38,661 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:42:08,910 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:42:08,910 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:42:39,111 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:42:39,111 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:43:09,399 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:43:09,399 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:43:39,770 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:43:39,770 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:44:10,034 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:44:10,034 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:44:40,251 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:44:40,251 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:45:10,519 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:45:10,520 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:45:41,899 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:45:41,899 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:46:13,640 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:46:13,640 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:46:43,847 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:46:43,847 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:47:14,123 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:47:14,123 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:47:44,283 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:47:44,283 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:48:14,574 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:48:14,574 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:48:44,768 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:48:44,768 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:49:14,948 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:49:14,948 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:49:45,110 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:49:45,111 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:50:15,320 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:50:15,320 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:50:45,625 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:50:45,625 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:51:15,804 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:51:15,804 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:51:46,024 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:51:46,024 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:52:16,241 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:52:16,241 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:52:46,653 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:52:46,653 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:53:16,871 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:53:16,871 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:53:47,031 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:53:47,031 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:54:17,215 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:54:17,215 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:54:47,377 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:54:47,377 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:55:17,559 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:55:17,559 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:55:47,770 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:55:47,770 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:56:17,994 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:56:17,994 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:56:48,155 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:56:48,155 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:57:18,351 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:57:18,352 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:57:48,636 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:57:48,637 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:58:19,045 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:58:19,045 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:58:49,206 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:58:49,206 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:59:19,388 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:59:19,388 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 11:59:49,559 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 11:59:49,559 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:00:19,748 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:00:19,748 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:00:49,949 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:00:49,949 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:01:20,129 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:01:20,130 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:01:50,300 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:01:50,300 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:02:20,507 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:02:20,507 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:02:50,714 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:02:50,714 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:03:21,024 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:03:21,024 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:03:51,241 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:03:51,241 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:04:21,434 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:04:21,434 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:04:51,652 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:04:51,652 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:05:21,845 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:05:21,845 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:05:52,232 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:05:52,232 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:06:22,418 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:06:22,418 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:06:52,583 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:06:52,583 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:07:22,779 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:07:22,779 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:07:52,943 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:07:52,943 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:08:23,172 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:08:23,172 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:08:53,417 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:08:53,417 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:09:23,626 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:09:23,627 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:09:53,804 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:09:53,804 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:10:24,042 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:10:24,042 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:10:54,249 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:10:54,249 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:11:24,430 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:11:24,430 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:11:54,598 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:11:54,598 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:12:24,779 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:12:24,779 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:12:54,942 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:12:54,942 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:13:25,167 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:13:25,167 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:13:55,327 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:13:55,327 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:14:25,523 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:14:25,523 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:14:55,715 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:14:55,715 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:15:25,919 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:15:25,919 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:15:56,114 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:15:56,114 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:16:26,337 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:16:26,337 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:16:56,515 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:16:56,515 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:17:26,750 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:17:26,751 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:17:56,913 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:17:56,913 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:18:27,144 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:18:27,144 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:18:57,313 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:18:57,313 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:19:27,502 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:19:27,502 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:19:57,692 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:19:57,692 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:20:27,879 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:20:27,880 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:20:58,075 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:20:58,075 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:21:28,313 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:21:28,314 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:21:58,507 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:21:58,508 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:22:28,833 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:22:28,833 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:22:59,129 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:22:59,129 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:23:29,535 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:23:29,535 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:23:59,696 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:23:59,696 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:24:29,936 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:24:29,936 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:25:00,096 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:25:00,096 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:25:30,288 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:25:30,288 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:26:00,467 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:26:00,467 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:26:30,660 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:26:30,660 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:27:00,857 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:27:00,857 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:27:31,126 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:27:31,126 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:28:01,334 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:28:01,334 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:28:31,607 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:28:31,607 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:29:01,848 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:29:01,848 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:29:32,055 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:29:32,055 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:30:02,264 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:30:02,264 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:30:32,527 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:30:32,527 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:31:02,784 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:31:02,784 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:31:32,989 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:31:32,989 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:32:03,162 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:32:03,162 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:32:33,354 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:32:33,354 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:33:03,531 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:33:03,531 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:33:33,761 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:33:33,762 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:34:04,037 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:34:04,037 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:34:34,328 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:34:34,328 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:35:04,489 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:35:04,490 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:35:34,758 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:35:34,758 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:36:05,010 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:36:05,010 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:36:35,277 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:36:35,277 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:37:05,486 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:37:05,486 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:37:36,000 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:37:36,000 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:38:06,165 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:38:06,165 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:38:36,515 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:38:36,515 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:39:06,691 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:39:06,691 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:39:37,010 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:39:37,010 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:40:07,247 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:40:07,247 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:40:37,442 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:40:37,442 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:41:07,771 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:41:07,772 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:41:37,974 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:41:37,974 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:42:08,184 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:42:08,184 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:42:38,367 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:42:38,367 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:43:08,528 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:43:08,529 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:43:38,749 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:43:38,749 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:44:09,017 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:44:09,017 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:44:39,226 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:44:39,227 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:45:09,391 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:45:09,391 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:45:39,743 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:45:39,743 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:46:10,054 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:46:10,054 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:46:40,239 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:46:40,239 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:47:10,413 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:47:10,414 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:47:40,597 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:47:40,598 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:48:10,761 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:48:10,764 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:48:41,001 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:48:41,002 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:49:11,164 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:49:11,164 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:49:41,395 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:49:41,396 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:50:11,558 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:50:11,558 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:50:41,743 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:50:41,743 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:51:11,958 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:51:11,958 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:51:42,141 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:51:42,141 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:52:12,414 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:52:12,414 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:52:42,635 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:52:42,635 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:53:12,805 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:53:12,805 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:53:43,180 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:53:43,180 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:54:13,356 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:54:13,356 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:54:43,553 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:54:43,554 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:55:13,859 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:55:13,859 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:55:44,038 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:55:44,038 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:56:14,236 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:56:14,236 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:56:44,408 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:56:44,408 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:57:14,584 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:57:14,584 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:57:44,775 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:57:44,776 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:58:14,935 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:58:14,936 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:58:45,157 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:58:45,157 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:59:15,365 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:59:15,365 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 12:59:45,678 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 12:59:45,678 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 13:00:15,845 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 13:00:15,846 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 13:00:46,093 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 13:00:46,094 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 13:01:16,294 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 13:01:16,295 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 13:01:46,508 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 13:01:46,508 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 13:02:16,721 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 13:02:16,721 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 13:02:46,903 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 13:02:46,903 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 13:03:17,143 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 13:03:17,143 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 13:03:47,445 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 13:03:47,446 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 13:04:17,608 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 13:04:17,608 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 13:04:47,792 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 13:04:47,792 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 13:05:17,952 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 13:05:17,953 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 13:05:48,134 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 13:05:48,134 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 13:06:18,384 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 13:06:18,384 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 13:06:48,562 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 13:06:48,563 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 13:07:18,731 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 13:07:18,731 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 13:07:48,884 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 13:07:48,884 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 13:08:19,043 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 13:08:19,043 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 13:08:49,274 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 13:08:49,274 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 13:09:19,458 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 13:09:19,459 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 13:09:49,633 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 13:09:49,634 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 13:10:19,850 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 13:10:19,850 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 13:10:50,057 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 13:10:50,057 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 13:11:20,230 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 13:11:20,231 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 13:11:50,475 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 13:11:50,475 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 13:12:20,625 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 13:12:20,625 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 13:12:50,887 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 13:12:50,888 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 13:13:21,092 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 13:13:21,092 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 13:13:51,293 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 13:13:51,294 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 13:14:21,502 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 13:14:21,502 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 13:14:51,710 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 13:14:51,710 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 13:15:21,907 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 13:15:21,907 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 13:15:52,184 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 13:15:52,184 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 13:16:22,356 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 13:16:22,356 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 13:16:52,648 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 13:16:52,648 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 13:17:22,818 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 13:17:22,818 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 13:17:52,998 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 13:17:52,998 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 13:18:23,211 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 13:18:23,211 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 13:18:53,428 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 13:18:53,428 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 13:19:23,589 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 13:19:23,589 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 13:19:53,801 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 13:19:53,801 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 13:20:23,953 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 13:20:23,953 - root - DEBUG - DataFeedClient/read_datafeed()
2019-12-12 13:20:54,212 - root - DEBUG - DataFeedEventService() - no data coming in from datafeed --> read_datafeed()
2019-12-12 13:20:54,212 - root - DEBUG - DataFeedClient/read_datafeed()
